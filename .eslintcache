[{"C:\\Users\\pp\\lab\\tabata\\src\\App\\App.js":"1","C:\\Users\\pp\\lab\\tabata\\src\\index.js":"2","C:\\Users\\pp\\lab\\tabata\\src\\screens\\TrainingPage\\TrainingPage.js":"3","C:\\Users\\pp\\lab\\tabata\\src\\navigation\\AppNavigation.js":"4","C:\\Users\\pp\\lab\\tabata\\src\\screens\\HomePage\\HomePage.js":"5","C:\\Users\\pp\\lab\\tabata\\src\\components\\AppBar\\AppBar.js":"6","C:\\Users\\pp\\lab\\tabata\\src\\redux\\reducers\\trainingListReducer.js":"7","C:\\Users\\pp\\lab\\tabata\\src\\redux\\constants.js":"8","C:\\Users\\pp\\lab\\tabata\\src\\redux\\store.js":"9","C:\\Users\\pp\\lab\\tabata\\src\\screens\\HomePage\\components\\ExerciseForm.js":"10","C:\\Users\\pp\\lab\\tabata\\src\\models\\handlers\\handlers.js":"11","C:\\Users\\pp\\lab\\tabata\\src\\redux\\actions\\trainingListAction.js":"12","C:\\Users\\pp\\lab\\tabata\\src\\models\\Training.js":"13","C:\\Users\\pp\\lab\\tabata\\src\\screens\\HomePage\\components\\Item.js":"14","C:\\Users\\pp\\lab\\tabata\\src\\models\\Timer.js":"15","C:\\Users\\pp\\lab\\tabata\\src\\models\\Maths.js":"16","C:\\Users\\pp\\lab\\tabata\\src\\redux\\reducers\\currTrainingReducer.js":"17","C:\\Users\\pp\\lab\\tabata\\src\\reportWebVitals.js":"18"},{"size":346,"mtime":1609915342520,"results":"19","hashOfConfig":"20"},{"size":513,"mtime":1611185462227,"results":"21","hashOfConfig":"20"},{"size":6514,"mtime":1611224533732,"results":"22","hashOfConfig":"20"},{"size":649,"mtime":1610098862046,"results":"23","hashOfConfig":"20"},{"size":3184,"mtime":1611223699763,"results":"24","hashOfConfig":"20"},{"size":1809,"mtime":1611225185112,"results":"25","hashOfConfig":"20"},{"size":1783,"mtime":1611184443377,"results":"26","hashOfConfig":"20"},{"size":292,"mtime":1611186049706,"results":"27","hashOfConfig":"20"},{"size":1344,"mtime":1611186199749,"results":"28","hashOfConfig":"20"},{"size":4659,"mtime":1611223517366,"results":"29","hashOfConfig":"20"},{"size":4824,"mtime":1611190479469,"results":"30","hashOfConfig":"20"},{"size":588,"mtime":1611186167705,"results":"31","hashOfConfig":"20"},{"size":2376,"mtime":1611191875288,"results":"32","hashOfConfig":"20"},{"size":970,"mtime":1611224003658,"results":"33","hashOfConfig":"20"},{"size":365,"mtime":1611190211484,"results":"34","hashOfConfig":"20"},{"size":519,"mtime":1611181727080,"results":"35","hashOfConfig":"20"},{"size":485,"mtime":1611186596337,"results":"36","hashOfConfig":"20"},{"size":362,"mtime":1609671684043,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wjxs73",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\pp\\lab\\tabata\\src\\App\\App.js",[],"C:\\Users\\pp\\lab\\tabata\\src\\index.js",[],["76","77"],"C:\\Users\\pp\\lab\\tabata\\src\\screens\\TrainingPage\\TrainingPage.js",["78","79","80","81","82","83","84","85"],"import React, { Dimensions, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  ListItemSecondaryAction,\r\n  Paper,\r\n  CircularProgress,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport AppBar from \"../../components/AppBar/AppBar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { connect } from \"react-redux\";\r\nimport Training from \"../../models/Training\";\r\nimport Timer from \"../../models/Timer\";\r\nimport { setCurrTraining } from \"../../redux/actions/currTrainingAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  body: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100%\",\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    paddingTop: 50,\r\n    paddingBottom: 50,\r\n    textAlign: \"center\",\r\n  },\r\n  progressArea: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginBottom: \"6rem\",\r\n  },\r\n  circleOutBg: {\r\n    color: theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\r\n  },\r\n  circleOut: {\r\n    marginTop: \"-16rem\",\r\n  },\r\n  circleInBg: {\r\n    marginTop: \"-14.5rem\",\r\n    color: theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\r\n  },\r\n  circleIn: {\r\n    marginTop: \"-13rem\",\r\n  },\r\n  timer: {\r\n    marginTop: \"-8.5rem\",\r\n  },\r\n  paper: {\r\n    marginTop: 30,\r\n    margin: 10,\r\n    width: \"90%\",\r\n    height: \"20%\",\r\n    \"overflow-y\": \"scroll\",\r\n  },\r\n  list: {\r\n    justifyContent: \"center\",\r\n  },\r\n  iconContainer: {\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  endListButton: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  trainingButtonContainer: {\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    bottom: 10,\r\n  },\r\n  trainingButton: {\r\n    width: \"90%\",\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  },\r\n  time: {\r\n    textAlign: \"end\",\r\n  },\r\n}));\r\n\r\nconst useTimer = () => {\r\n  const [state, setState] = useState(Timer().initTimer());\r\n\r\n  const play = () => setState({ ...Timer(state).play() });\r\n  const replay = () => setState({ ...Timer(state).replay() });\r\n  const pause = () => setState({ ...Timer(state).pause() });\r\n  const stop = () => setState({ ...Timer(state).stop() });\r\n  const increment = () => setState({ ...Timer(state).increment() });\r\n  const setTime = (v) => setState({ ...Timer(state).setTime(v) });\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      if (state && state.isRunning) increment();\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [state]);\r\n\r\n  return {\r\n    timer: state,\r\n    play,\r\n    replay,\r\n    pause,\r\n    stop,\r\n    setTime,\r\n  };\r\n};\r\n\r\nconst TrainingPage = (props) => {\r\n  const classes = useStyles();\r\n  const { training, dispatch } = props;\r\n  const { timer, play, replay, pause, stop, setTime } = useTimer();\r\n\r\n  const time = timer ? timer.time : 0;\r\n  if (training.isEnded(time)) stop();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar title=\"Training\" backIcon={true} />\r\n      <div className={classes.body}>\r\n        <Typography className={classes.title} variant=\"h4\" color=\"secondary\">\r\n          {training.getStepByTime(time).title}\r\n        </Typography>\r\n        <div className={classes.progressArea}>\r\n          <CircularProgress\r\n            variant=\"determinate\"\r\n            value={100}\r\n            size={\"16rem\"}\r\n            className={classes.circleOutBg}\r\n          />\r\n          <CircularProgress\r\n            variant=\"determinate\"\r\n            value={training.getPercent(time) * 100}\r\n            size={\"16rem\"}\r\n            className={classes.circleOut}\r\n          />\r\n          <CircularProgress\r\n            variant=\"determinate\"\r\n            value={100}\r\n            size={\"13rem\"}\r\n            className={classes.circleInBg}\r\n            color=\"secondary\"\r\n          />\r\n          <CircularProgress\r\n            variant=\"determinate\"\r\n            value={training.getStepPercent(time) * 100}\r\n            size={\"13rem\"}\r\n            className={classes.circleIn}\r\n            color=\"secondary\"\r\n          />\r\n          <Typography className={classes.timer} variant=\"h2\" color=\"secondary\">\r\n            {training.getStepTime(time) / 1000}s\r\n          </Typography>\r\n        </div>\r\n        <Paper variant=\"outlined\" className={classes.paper}>\r\n          <List className={classes.list}>\r\n            {training.getRemainingSteps(time).map((item, i) => {\r\n              return (\r\n                <ListItem\r\n                  button\r\n                  key={`${i}`}\r\n                  onClick={() => setTime(training.getStepStartTime(item.id))}\r\n                >\r\n                  <ListItemText primary={item.title} />\r\n                  <ListItemText\r\n                    primary={`${item.duration / 1000}s`}\r\n                    className={classes.time}\r\n                  />\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </Paper>\r\n        <div className={classes.trainingButtonContainer}>\r\n          <Button\r\n            disabled={!timer.can(\"play\")}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => play()}\r\n            className={classes.trainingButton}\r\n          >\r\n            Play\r\n          </Button>\r\n          <Button\r\n            disabled={!timer.can(\"pause\")}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => pause()}\r\n            className={classes.trainingButton}\r\n          >\r\n            Pause\r\n          </Button>\r\n          <Button\r\n            disabled={!timer.can(\"stop\")}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => stop()}\r\n            className={classes.trainingButton}\r\n          >\r\n            Stop\r\n          </Button>\r\n          <Button\r\n            disabled={!timer.can(\"replay\")}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => replay()}\r\n            className={classes.trainingButton}\r\n          >\r\n            Replay\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MapStateToProps = (state) => ({\r\n  training: Training(state.currTraining),\r\n});\r\n\r\nexport default connect(MapStateToProps)(TrainingPage);\r\n","C:\\Users\\pp\\lab\\tabata\\src\\navigation\\AppNavigation.js",[],"C:\\Users\\pp\\lab\\tabata\\src\\screens\\HomePage\\HomePage.js",["86","87","88","89","90","91","92"],"C:\\Users\\pp\\lab\\tabata\\src\\components\\AppBar\\AppBar.js",[],"C:\\Users\\pp\\lab\\tabata\\src\\redux\\reducers\\trainingListReducer.js",[],"C:\\Users\\pp\\lab\\tabata\\src\\redux\\constants.js",[],"C:\\Users\\pp\\lab\\tabata\\src\\redux\\store.js",[],"C:\\Users\\pp\\lab\\tabata\\src\\screens\\HomePage\\components\\ExerciseForm.js",["93"],"C:\\Users\\pp\\lab\\tabata\\src\\models\\handlers\\handlers.js",[],"C:\\Users\\pp\\lab\\tabata\\src\\redux\\actions\\trainingListAction.js",[],"C:\\Users\\pp\\lab\\tabata\\src\\models\\Training.js",[],"C:\\Users\\pp\\lab\\tabata\\src\\screens\\HomePage\\components\\Item.js",[],"C:\\Users\\pp\\lab\\tabata\\src\\models\\Timer.js",[],"C:\\Users\\pp\\lab\\tabata\\src\\models\\Maths.js",[],"C:\\Users\\pp\\lab\\tabata\\src\\redux\\reducers\\currTrainingReducer.js",[],"C:\\Users\\pp\\lab\\tabata\\src\\reportWebVitals.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":27},{"ruleId":"98","severity":1,"message":"102","line":4,"column":3,"nodeType":"100","messageId":"101","endLine":4,"endColumn":13},{"ruleId":"98","severity":1,"message":"103","line":5,"column":3,"nodeType":"100","messageId":"101","endLine":5,"endColumn":26},{"ruleId":"98","severity":1,"message":"104","line":15,"column":8,"nodeType":"100","messageId":"101","endLine":15,"endColumn":18},{"ruleId":"98","severity":1,"message":"105","line":16,"column":8,"nodeType":"100","messageId":"101","endLine":16,"endColumn":15},{"ruleId":"98","severity":1,"message":"106","line":20,"column":10,"nodeType":"100","messageId":"101","endLine":20,"endColumn":25},{"ruleId":"107","severity":1,"message":"108","line":107,"column":6,"nodeType":"109","endLine":107,"endColumn":13,"suggestions":"110"},{"ruleId":"98","severity":1,"message":"111","line":121,"column":21,"nodeType":"100","messageId":"101","endLine":121,"endColumn":29},{"ruleId":"98","severity":1,"message":"102","line":4,"column":3,"nodeType":"100","messageId":"101","endLine":4,"endColumn":13},{"ruleId":"98","severity":1,"message":"103","line":5,"column":3,"nodeType":"100","messageId":"101","endLine":5,"endColumn":26},{"ruleId":"98","severity":1,"message":"112","line":12,"column":8,"nodeType":"100","messageId":"101","endLine":12,"endColumn":20},{"ruleId":"98","severity":1,"message":"104","line":13,"column":8,"nodeType":"100","messageId":"101","endLine":13,"endColumn":18},{"ruleId":"98","severity":1,"message":"113","line":17,"column":19,"nodeType":"100","messageId":"101","endLine":17,"endColumn":30},{"ruleId":"98","severity":1,"message":"114","line":17,"column":32,"nodeType":"100","messageId":"101","endLine":17,"endColumn":43},{"ruleId":"98","severity":1,"message":"115","line":18,"column":10,"nodeType":"100","messageId":"101","endLine":18,"endColumn":21},{"ruleId":"98","severity":1,"message":"115","line":16,"column":10,"nodeType":"100","messageId":"101","endLine":16,"endColumn":21},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'Dimensions' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'DeleteIcon' is defined but never used.","'AddIcon' is defined but never used.","'setCurrTraining' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'increment'. Either include it or remove the dependency array.","ArrayExpression",["118"],"'dispatch' is assigned a value but never used.","'ListItemText' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'modTraining' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [increment, state]",{"range":"121","text":"122"},[2808,2815],"[increment, state]"]