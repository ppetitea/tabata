{"version":3,"sources":["components/AppBar/AppBar.js","screens/TrainingPage/components/Item.js","models/handlers/handlers.js","models/Maths.js","models/Training.js","redux/constants.js","redux/actions/currTrainingAction.js","screens/TrainingPage/components/ExerciseForm.js","constants/constants.js","models/Config.js","services/services.js","_config/config.js","screens/TrainingPage/TrainingPage.js","models/Timer.js","hooks/useTimer.js","screens/TrainingRunPage/TrainingRunPage.js","screens/TrainingListPage/components/TrainingForm.js","redux/actions/trainingListAction.js","hooks/useShowable.js","screens/TrainingListPage/TrainingListPage.js","navigation/AppNavigation.js","redux/reducers/currTrainingReducer.js","redux/reducers/trainingListReducer.js","redux/store.js","App/App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","leftButtonContainer","flex","title","textAlign","right","withRouter","props","backIcon","history","classes","className","position","Toolbar","IconButton","edge","color","aria-label","onClick","goBack","Typography","variant","time","Item","onPress","onDelete","ListItem","button","ListItemText","primary","ListItemSecondaryAction","canHandleInit","state","fromLastState","lastState","Object","assign","re","fromCollection","collection","test","find","i","fromCollectionById","id","getId","fromCollectionByKey","key","getKey","canHandleTitle","getTitle","setTitle","v","canHandleId","setId","uuidv4","canHandleVisibility","setVisible","visible","hide","show","canHandleDuration","getDuration","duration","setDuration","canHandleCollection","getCollection","getFirst","length","getLast","setCollection","items","getItemById","item","getItemByKey","addItem","addItemStart","delItemById","filter","delItemByIndex","index","delItemByKey","modItemById","nextItem","map","modItemByIndex","modItemByKey","canHandleRange","belongRange","min","max","n","belongRangeMax","belongRangeMin","outRange","Maths","behavior","TrainingStep","canHandleTrainingSteps","getStepByTimeWithRange","maths","getStepByTime","getStepInstant","stepTime","percent","getStepTime","getStepTimeDecrement","timerTime","getStepPercent","getPercent","isEnded","getRemainingSteps","getStepStartTime","start","Training","CURR_TRAINING_SET","TRAINING_LIST_SET","TRAINING_ADD","TRAINING_MOD","TRAINING_DEL","TRAINING_MOVE","setCurrTraining","payload","type","connect","training","currTraining","dispatch","open","handleClose","validationSchema","yup","required","positive","integer","default","reposDuration","formik","useFormik","initialValues","onSubmit","values","nextTraining","nextDuration","nextReposDuration","console","log","repos","Dialog","onClose","aria-labelledby","fullWidth","handleSubmit","DialogTitle","DialogContent","TextField","autoFocus","margin","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","DialogActions","Button","startIcon","ENV_DEV","ENV_PROD","TIMER_INCREMENT","TIMER_DECREMENT","canHandleConfig","isDevEnv","env","isProdEnv","setDevEnv","setProdEnv","setTimeDirection","timeDirection","setTimeDirectionIncrement","setTimeDirectionDecrement","isTimerIncrement","isTimerDecrement","init","Config","config","prodConfig","appConfig","paper","list","justifyContent","iconContainer","endListButton","marginLeft","marginRight","trainingButtonContainer","display","width","bottom","trainingButton","React","useState","setOpen","Paper","List","rehydrated","href","Timer","getActions","actions","setActions","can","action","canHandleActions","initTimer","isRunning","setTime","increment","ms","isNaN","decrement","play","replay","pause","stop","canHandleTimer","useTimer","setState","useEffect","timer","setInterval","clearInterval","body","flexDirection","height","alignItems","paddingTop","paddingBottom","maxHeight","progressArea","marginBottom","circleOutBg","palette","grey","circleOut","marginTop","circleInBg","circleIn","CircularProgress","size","disabled","useShowable","initialState","toggleVisibility","trainingList","useHistory","push","AppNavigation","Router","HashRouter","BrowserRouter","basename","exact","path","TrainingPage","initialTraining","rootReducers","combineReducers","nextState","nextList","inner","indexA","indexB","tmp","store","createStore","serialisedState","localStorage","getItem","JSON","parse","e","warn","loadFromLocalStorage","subscribe","stringify","setItem","saveToLocalStorage","getState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47c43f98.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MUIAppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import Button from \"@material-ui/core/Button\";\r\n// import IconButton from \"@material-ui/core/IconButton\";\r\n// import MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    // marginRight: theme.spacing(2),\r\n  },\r\n  leftButtonContainer: {\r\n    flex: 1,\r\n    // backgroundColor: \"blue\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\",\r\n    // backgroundColor: \"red\",\r\n  },\r\n  right: {\r\n    // marginLeft: theme.spacing(2),\r\n    // backgroundColor: \"green\",\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst AppBar = (props) => {\r\n  const { title, backIcon, history } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MUIAppBar position=\"static\">\r\n        <Toolbar>\r\n          {backIcon && (\r\n            <div className={classes.leftButtonContainer}>\r\n              <IconButton\r\n                edge=\"start\"\r\n                className={classes.menuButton}\r\n                color=\"inherit\"\r\n                aria-label=\"back\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <ChevronLeftIcon />\r\n              </IconButton>\r\n            </div>\r\n          )}\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {title}\r\n          </Typography>\r\n          {backIcon && <Typography className={classes.title}> </Typography>}\r\n        </Toolbar>\r\n      </MUIAppBar>\r\n    </div>\r\n  );\r\n};\r\nexport default withRouter(AppBar);\r\n","import React from \"react\";\r\nimport { IconButton, ListItemSecondaryAction } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  time: { textAlign: \"end\" },\r\n}));\r\n\r\nconst Item = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { title, time, onPress = () => {}, onDelete = () => {} } = props;\r\n\r\n  return (\r\n    <ListItem button onClick={onPress}>\r\n      <ListItemText primary={title} />\r\n      <ListItemText className={classes.time} primary={`${time / 1000}s`} />\r\n      <ListItemSecondaryAction>\r\n        <IconButton edge=\"end\" aria-label=\"comments\" onClick={onDelete}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const canHandleInit = (state) => ({\r\n  fromLastState: (lastState) => {\r\n    Object.assign(state, lastState);\r\n    return state;\r\n  },\r\n  re: (lastState) => {\r\n    Object.assign(state, lastState);\r\n    return state;\r\n  },\r\n  fromCollection: (collection, test) => {\r\n    return state.re(collection.find((i) => test(state.re(i))));\r\n  },\r\n  fromCollectionById: (collection, id) => {\r\n    const test = (state) => state.getId() === id;\r\n    return state.fromCollection(collection, test);\r\n  },\r\n  fromCollectionByKey: (collection, key) => {\r\n    const test = (state) => state.getKey() === key;\r\n    return state.fromCollection(collection, test);\r\n  },\r\n});\r\n\r\nexport const canHandleTitle = (state) => ({\r\n  getTitle: () => state.title,\r\n  setTitle: (v) => {\r\n    state.title = v;\r\n    return state;\r\n  },\r\n});\r\n\r\nexport const canHandleId = (state) => ({\r\n  getId: () => state.id,\r\n  setId: (v = uuidv4()) => {\r\n    state.id = v;\r\n    return state;\r\n  },\r\n});\r\n\r\nexport const canHandleVisibility = (state) => ({\r\n  setVisible: (v) => {\r\n    state.visible = v;\r\n    return state;\r\n  },\r\n  hide: () => state.setVisible(false),\r\n  show: () => state.setVisible(true),\r\n});\r\n\r\nexport const canHandleDuration = (state) => ({\r\n  getDuration: () => state.duration,\r\n  setDuration: (v) => {\r\n    state.duration = v;\r\n    return state;\r\n  },\r\n});\r\n\r\nexport const canHandleCollection = (state) => ({\r\n  getCollection: (collection) => state[collection],\r\n  getFirst: (collection) => {\r\n    return state[collection].length >= 1 ? state[collection][0] : null;\r\n  },\r\n  getLast: (collection) => {\r\n    const length = state[collection].length;\r\n    return length >= 1 ? state[collection][length - 1] : null;\r\n  },\r\n  setCollection: (collection, items) => {\r\n    state[collection] = items;\r\n    return state;\r\n  },\r\n  getItemById: (collection, id) => {\r\n    for (const item of state[collection]) if (item.getId() === id) return item;\r\n  },\r\n  getItemByKey: (collection, key) => {\r\n    for (const item of state[collection]) {\r\n      if (item.getKey() === key) return item;\r\n    }\r\n  },\r\n  addItem: (collection, item) => {\r\n    if (state[collection]) {\r\n      state[collection] = [...state[collection], item];\r\n    } else state[collection] = [item];\r\n    return state;\r\n  },\r\n  addItemStart: (collection, item) => {\r\n    state[collection] = [item, ...state[collection]];\r\n    return state;\r\n  },\r\n  delItemById: (collection, id) => {\r\n    state[collection] = state[collection].filter((item) => item.getId() !== id);\r\n    return state;\r\n  },\r\n  delItemByIndex: (collection, index) => {\r\n    state[collection] = state[collection].filter((item, i) => i !== index);\r\n    return state;\r\n  },\r\n  delItemByKey: (collection, key) => {\r\n    state[collection] = state[collection].filter(\r\n      (item) => item.getKey() !== key\r\n    );\r\n    return state;\r\n  },\r\n  modItemById: (collection, nextItem) => {\r\n    state[collection] = state[collection].map((item) => {\r\n      if (item.getId() === nextItem.getId()) return nextItem;\r\n      else return item;\r\n    });\r\n    return state;\r\n  },\r\n  modItemByIndex: (collection, nextItem, index) => {\r\n    state[collection] = state[collection].map((item, i) => {\r\n      if (i === index) return nextItem;\r\n      else return item;\r\n    });\r\n    return state;\r\n  },\r\n  modItemByKey: (collection, nextItem) => {\r\n    state[collection] = state[collection].map((item) => {\r\n      if (item.getKey() === nextItem.getKey()) return nextItem;\r\n      else return item;\r\n    });\r\n    return state;\r\n  },\r\n});\r\n\r\nexport const canHandleActions = (state) => ({\r\n  getActions: () => state.actions,\r\n  setActions: (actions = []) => {\r\n    state.actions = actions;\r\n    return state;\r\n  },\r\n  can: (action) => {\r\n    if (state.actions && state.actions.find((i) => i === action)) return true;\r\n    else return false;\r\n  },\r\n});\r\n\r\nexport const canHandleTimer = (state) => ({\r\n  ...canHandleActions(state),\r\n  initTimer: () => {\r\n    state.time = 0;\r\n    state.isRunning = false;\r\n    state.actions = [\"play\"];\r\n    return state;\r\n  },\r\n  setTime: (v) => {\r\n    state.time = v;\r\n    return state;\r\n  },\r\n  increment: (ms = 1000) => {\r\n    if (isNaN(state.time)) state.time = 0;\r\n    state.time += ms;\r\n    return state;\r\n  },\r\n  decrement: (ms = 1000) => {\r\n    if (state.time - ms >= 0) state.time -= ms;\r\n    else state.time = 0;\r\n    return state;\r\n  },\r\n  play: () => {\r\n    state.isRunning = true;\r\n    state.actions = [\"pause\", \"stop\"];\r\n    return state;\r\n  },\r\n  replay: () => {\r\n    state.time = 0;\r\n    state.isRunning = true;\r\n    state.actions = [\"pause\", \"stop\"];\r\n    return state;\r\n  },\r\n  pause: () => {\r\n    state.isRunning = false;\r\n    state.actions = [\"play\", \"replay\"];\r\n    return state;\r\n  },\r\n  stop: () => {\r\n    state.time = 0;\r\n    state.isRunning = false;\r\n    state.actions = [\"play\"];\r\n    return state;\r\n  },\r\n});\r\n","const Maths = () => {\r\n  let state = {};\r\n\r\n  const behavior = (state) => ({\r\n    ...canHandleRange(state),\r\n  });\r\n  Object.assign(state, behavior(state));\r\n  return state;\r\n};\r\n\r\nconst canHandleRange = (state) => ({\r\n  belongRange: (min, max, n) => min <= n && n <= max, // [min - max]\r\n  belongRangeMax: (min, max, n) => min <= n && n <= max, // ]min - max]\r\n  belongRangeMin: (min, max, n) => min <= n && n <= max, // [min - max[\r\n  outRange: (min, max, n) => n <= min && max <= n,\r\n});\r\n\r\nexport default Maths();\r\n","import {\r\n  canHandleId,\r\n  canHandleTitle,\r\n  canHandleCollection,\r\n  canHandleInit,\r\n  canHandleDuration,\r\n  canHandleVisibility,\r\n} from \"./handlers/handlers\";\r\nimport maths from \"../models/Maths\";\r\n\r\nconst TrainingStep = (lastState = {}) => {\r\n  let state = { ...lastState };\r\n\r\n  const behavior = (state) => ({\r\n    ...canHandleId(state),\r\n    ...canHandleTitle(state),\r\n    ...canHandleDuration(state),\r\n    ...canHandleVisibility(state),\r\n    ...canHandleInit(state),\r\n  });\r\n  Object.assign(state, behavior(state));\r\n  return state;\r\n};\r\n\r\nconst canHandleTrainingSteps = (state) => ({\r\n  getStepByTimeWithRange: (time) => {\r\n    let min = 0;\r\n    let max = 0;\r\n    let index = 0;\r\n    const item = state.items.find((item) => {\r\n      min = max;\r\n      max += item.duration;\r\n      index++;\r\n      return maths.belongRange(min, max, time);\r\n    });\r\n    return { item, min, max, index };\r\n  },\r\n  getStepByTime: (time) => state.getStepByTimeWithRange(time).item,\r\n  getStepInstant: (time) => {\r\n    const { item, min } = state.getStepByTimeWithRange(time);\r\n    const stepTime = min ? time - min : time;\r\n    const percent = item ? stepTime / item.duration : 0;\r\n    return { item, time: stepTime, percent };\r\n  },\r\n  getStepTime: (time) => state.getStepInstant(time).time,\r\n  getStepTimeDecrement: (timerTime) => {\r\n    const { item, time } = state.getStepInstant(timerTime);\r\n    const decrement = item.duration - time;\r\n    return decrement;\r\n  },\r\n  getStepPercent: (time) => state.getStepInstant(time).percent,\r\n  getDuration: () => {\r\n    let duration = 0;\r\n    state.items.map((item) => (duration += item.duration));\r\n    return duration;\r\n  },\r\n  getPercent: (time) => time / state.getDuration(),\r\n  isEnded: (time) => time >= state.getDuration(),\r\n  getRemainingSteps: (time) => {\r\n    const index = state.getStepByTimeWithRange(time).index;\r\n    const remainings = state.items.filter((item, i) => i >= index);\r\n    return remainings;\r\n  },\r\n  getStepStartTime: (id) => {\r\n    let start = 0;\r\n    for (const item of state.items) {\r\n      if (item.id === id) break;\r\n      start += item.duration;\r\n    }\r\n    return start;\r\n  },\r\n});\r\n\r\nconst Training = (lastState = {}) => {\r\n  let state = { ...lastState };\r\n\r\n  const behavior = (state) => ({\r\n    ...canHandleId(state),\r\n    ...canHandleTitle(state),\r\n    ...canHandleCollection(state),\r\n    ...canHandleTrainingSteps(state),\r\n    ...canHandleInit(state),\r\n  });\r\n  Object.assign(state, behavior(state));\r\n  return state;\r\n};\r\n\r\nexport { Training, TrainingStep };\r\nexport default Training;\r\n","export const CURR_TRAINING_SET = \"CURR_TRAINING_SET\";\r\nexport const TRAINING_LIST_SET = \"TRAINING_LIST_SET\";\r\nexport const TRAINING_ADD = \"TRAINING_ADD\";\r\nexport const TRAINING_MOD = \"TRAINING_MOD\";\r\nexport const TRAINING_DEL = \"TRAINING_DEL\";\r\nexport const TRAINING_MOVE = \"TRAINING_MOVE\";\r\n","import { CURR_TRAINING_SET } from \"../constants\";\r\n\r\nexport const setCurrTraining = (payload) => {\r\n  return { type: CURR_TRAINING_SET, payload };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Training, { TrainingStep } from \"../../../models/Training\";\r\nimport { modTraining } from \"../../../redux/actions/trainingListAction\";\r\nimport { setCurrTraining } from \"../../../redux/actions/currTrainingAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n}));\r\n\r\nconst ExerciseForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { dispatch, training, open, handleClose } = props;\r\n\r\n  const validationSchema = yup.object({\r\n    title: yup\r\n      .string(\"Entrer le nom de l'exercice\")\r\n      .min(3, \"Le nom doit faire minimum 3 caracteres\")\r\n      .required(\"Le nom est requis\"),\r\n    duration: yup\r\n      .number(\"Entrer le nombre de secondes\")\r\n      .required(\"requis\")\r\n      .positive(\"superieur ou egal a 0\")\r\n      .integer(\"nombre entier\")\r\n      .default(30),\r\n    reposDuration: yup\r\n      .number(\"Entrer le nombre de secondes\")\r\n      .required(\"requis\")\r\n      .min(0, \"minimum 0\")\r\n      .integer(\"nombre entier\")\r\n      .default(30),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: { title: \"\" },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      let nextTraining = Training(training);\r\n      const nextDuration = values.duration * 1000;\r\n      const nextReposDuration = values.reposDuration * 1000;\r\n      let item = TrainingStep().setId(nextTraining.items.length);\r\n      item.setTitle(values.title).setDuration(nextDuration).show();\r\n      nextTraining.addItem(\"items\", item);\r\n      if (values.reposDuration !== \"0\") {\r\n        console.log(values.reposDuration);\r\n        let repos = TrainingStep().setId(nextTraining.items.length);\r\n        repos.setTitle(\"Repos\").setDuration(nextReposDuration).hide();\r\n        nextTraining.addItem(\"items\", repos);\r\n      }\r\n      dispatch(setCurrTraining(nextTraining));\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        fullWidth\r\n      >\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <DialogTitle id=\"form-dialog-title\">Nouvel exercice</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              label=\"Nom de l'exercice\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={formik.values.title}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.title && Boolean(formik.errors.title)}\r\n              helperText={formik.touched.title && formik.errors.title}\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"duration\"\r\n              name=\"duration\"\r\n              label=\"Duree de l'exercice\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={formik.values.duration}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.duration && Boolean(formik.errors.duration)}\r\n              helperText={formik.touched.duration && formik.errors.duration}\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"reposDuration\"\r\n              name=\"reposDuration\"\r\n              label=\"Duree du repos apres l'exercice\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={formik.values.reposDuration}\r\n              onChange={formik.handleChange}\r\n              error={\r\n                formik.touched.reposDuration &&\r\n                Boolean(formik.errors.reposDuration)\r\n              }\r\n              helperText={\r\n                formik.touched.reposDuration && formik.errors.reposDuration\r\n              }\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              //   onClick={handleClose}\r\n              startIcon={<AddIcon />}\r\n              fullWidth\r\n              type=\"submit\"\r\n            >\r\n              Ajouter l'exercice\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MapStateToProps = (state) => ({\r\n  training: state.currTraining,\r\n});\r\n\r\nexport default connect(MapStateToProps)(ExerciseForm);\r\n","export const ENV_DEV = \"ENV_DEV\";\r\nexport const ENV_PROD = \"ENV_PROD\";\r\nexport const TIMER_INCREMENT = \"INCREMENT\";\r\nexport const TIMER_DECREMENT = \"DECREMENT\";\r\n","import {\r\n  ENV_DEV,\r\n  ENV_PROD,\r\n  TIMER_INCREMENT,\r\n  TIMER_DECREMENT,\r\n} from \"../constants/constants\";\r\n\r\nconst Config = (lastState = {}) => {\r\n  let state = {\r\n    env: ENV_DEV,\r\n    timeDirection: TIMER_DECREMENT,\r\n    ...lastState,\r\n  };\r\n\r\n  const behavior = (state) => ({\r\n    ...canHandleConfig(state),\r\n  });\r\n  Object.assign(state, behavior(state));\r\n  return state;\r\n};\r\n\r\nexport const canHandleConfig = (state) => ({\r\n  isDevEnv: () => state.env === ENV_DEV,\r\n  isProdEnv: () => state.env === ENV_PROD,\r\n  setDevEnv: () => {\r\n    state.env = ENV_DEV;\r\n    return state;\r\n  },\r\n  setProdEnv: () => {\r\n    state.env = ENV_PROD;\r\n    return state;\r\n  },\r\n  setTimeDirection: (v) => {\r\n    state.timeDirection = v;\r\n    return state;\r\n  },\r\n  setTimeDirectionIncrement: () => state.setTimeDirection(TIMER_INCREMENT),\r\n  setTimeDirectionDecrement: () => state.setTimeDirection(TIMER_DECREMENT),\r\n  isTimerIncrement: () => state.timeDirection === TIMER_INCREMENT,\r\n  isTimerDecrement: () => state.timeDirection === TIMER_DECREMENT,\r\n  init: (init = {}) => {\r\n    if (init.env) state.env = init.env;\r\n    if (init.timeDirection) state.timeDirection = init.timeDirection;\r\n    return state;\r\n  },\r\n});\r\n\r\nexport default Config;\r\n","import Config from \"../models/Config\";\r\nimport globalConfig from \"../_config/config\";\r\n\r\nconst config = Config(globalConfig);\r\n\r\nexport { config };\r\n","import devConfig from \"./configs/devConfig.json\";\r\nimport prodConfig from \"./configs/prodConfig.json\";\r\nimport appConfig from \"./configs/appConfig.json\";\r\n\r\nconst envConfig = prodConfig;\r\n\r\nconst globalConfig = {\r\n  env: envConfig.env,\r\n  timeDirection: appConfig.timeDirection,\r\n};\r\n\r\nexport default globalConfig;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  ListItemSecondaryAction,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport AppBar from \"../../components/AppBar/AppBar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Item from \"./components/Item\";\r\nimport ExerciseForm from \"./components/ExerciseForm\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { modTraining } from \"../../redux/actions/trainingListAction\";\r\nimport Training, { TrainingStep } from \"../../models/Training\";\r\nimport { setCurrTraining } from \"../../redux/actions/currTrainingAction\";\r\nimport { config } from \"../../services/services\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  paper: {\r\n    margin: 10,\r\n  },\r\n  list: {\r\n    justifyContent: \"center\",\r\n  },\r\n  iconContainer: {\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  endListButton: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  trainingButtonContainer: {\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    bottom: 10,\r\n  },\r\n  trainingButton: {\r\n    flex: 1,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  },\r\n}));\r\n\r\nconst TrainingSetupPage = (props) => {\r\n  const { dispatch, training } = props;\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar title={training.title} backIcon={true} />\r\n      <Paper variant=\"outlined\" className={classes.paper}>\r\n        <List className={classes.list}>\r\n          {training.items.map((item, i) => {\r\n            const rehydrated = TrainingStep(item);\r\n            return (\r\n              <Item\r\n                key={i}\r\n                title={rehydrated.title}\r\n                time={rehydrated.duration}\r\n                onDelete={() => {\r\n                  let nextTraining = Training(training);\r\n                  nextTraining.delItemByIndex(\"items\", i);\r\n                  dispatch(setCurrTraining(nextTraining));\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n          <ListItem>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={handleClickOpen}\r\n              startIcon={<AddIcon />}\r\n              className={classes.endListButton}\r\n            >\r\n              Ajouter\r\n            </Button>\r\n          </ListItem>\r\n        </List>\r\n      </Paper>\r\n      <div className={classes.trainingButtonContainer}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          href={config.isProdEnv() ? \"#/training-run\" : \"/training-run\"}\r\n          className={classes.trainingButton}\r\n        >\r\n          Entrainement\r\n        </Button>\r\n      </div>\r\n      <ExerciseForm open={open} handleClose={handleClose} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MapStateToProps = (state) => ({\r\n  training: Training(state.currTraining),\r\n});\r\n\r\nexport default connect(MapStateToProps)(TrainingSetupPage);\r\n","import { canHandleInit, canHandleTimer } from \"./handlers/handlers\";\r\n\r\nconst Timer = (lastState) => {\r\n  let state = {};\r\n\r\n  const behavior = (state) => ({\r\n    ...canHandleInit(state),\r\n    ...canHandleTimer(state),\r\n  });\r\n  Object.assign(state, behavior(state));\r\n  if (lastState) state.fromLastState(lastState);\r\n  return state;\r\n};\r\n\r\nexport default Timer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Timer from \"../models/Timer\";\r\n\r\nconst useTimer = () => {\r\n  const [state, setState] = useState(Timer().initTimer());\r\n\r\n  const play = () => setState({ ...Timer(state).play() });\r\n  const replay = () => setState({ ...Timer(state).replay() });\r\n  const pause = () => setState({ ...Timer(state).pause() });\r\n  const stop = () => setState({ ...Timer(state).stop() });\r\n  const increment = () => setState({ ...Timer(state).increment() });\r\n  const setTime = (v) => setState({ ...Timer(state).setTime(v) });\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      if (state && state.isRunning) increment();\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [state]);\r\n\r\n  return {\r\n    timer: state,\r\n    play,\r\n    replay,\r\n    pause,\r\n    stop,\r\n    setTime,\r\n  };\r\n};\r\n\r\nexport default useTimer;\r\n","import React, { Dimensions, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  ListItemSecondaryAction,\r\n  Paper,\r\n  CircularProgress,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport AppBar from \"../../components/AppBar/AppBar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { connect } from \"react-redux\";\r\nimport Training from \"../../models/Training\";\r\nimport Timer from \"../../models/Timer\";\r\nimport { setCurrTraining } from \"../../redux/actions/currTrainingAction\";\r\nimport useTimer from \"../../hooks/useTimer\";\r\nimport { config } from \"../../services/services\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  body: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100%\",\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    paddingTop: 50,\r\n    paddingBottom: 50,\r\n    textAlign: \"center\",\r\n    maxHeight: \"10%\",\r\n    \"overflow-y\": \"scroll\",\r\n  },\r\n  progressArea: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginBottom: \"6rem\",\r\n  },\r\n  circleOutBg: {\r\n    color: theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\r\n  },\r\n  circleOut: {\r\n    marginTop: \"-16rem\",\r\n  },\r\n  circleInBg: {\r\n    marginTop: \"-14.5rem\",\r\n    color: theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\r\n  },\r\n  circleIn: {\r\n    marginTop: \"-13rem\",\r\n  },\r\n  timer: {\r\n    marginTop: \"-8.5rem\",\r\n  },\r\n  paper: {\r\n    marginTop: 30,\r\n    margin: 10,\r\n    width: \"90%\",\r\n    height: \"20%\",\r\n    \"overflow-y\": \"scroll\",\r\n  },\r\n  list: {\r\n    justifyContent: \"center\",\r\n  },\r\n  iconContainer: {\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  endListButton: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  trainingButtonContainer: {\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    bottom: 10,\r\n  },\r\n  trainingButton: {\r\n    width: \"90%\",\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  },\r\n  time: {\r\n    textAlign: \"end\",\r\n  },\r\n}));\r\n\r\nconst TrainingRunPage = (props) => {\r\n  const classes = useStyles();\r\n  const { training, dispatch } = props;\r\n  const { timer, play, replay, pause, stop, setTime } = useTimer();\r\n\r\n  const time = timer ? timer.time : 0;\r\n  if (training.isEnded(time)) stop();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar title={training.title} backIcon={true} />\r\n      <div className={classes.body}>\r\n        <Typography className={classes.title} variant=\"h3\" color=\"secondary\">\r\n          {training.getStepByTime(time).title}\r\n        </Typography>\r\n        <div className={classes.progressArea}>\r\n          <CircularProgress\r\n            variant=\"determinate\"\r\n            value={100}\r\n            size={\"16rem\"}\r\n            className={classes.circleOutBg}\r\n          />\r\n          <CircularProgress\r\n            variant=\"determinate\"\r\n            value={training.getPercent(time) * 100}\r\n            size={\"16rem\"}\r\n            className={classes.circleOut}\r\n          />\r\n          <CircularProgress\r\n            variant=\"determinate\"\r\n            value={100}\r\n            size={\"13rem\"}\r\n            className={classes.circleInBg}\r\n            color=\"secondary\"\r\n          />\r\n          <CircularProgress\r\n            variant=\"determinate\"\r\n            value={training.getStepPercent(time) * 100}\r\n            size={\"13rem\"}\r\n            className={classes.circleIn}\r\n            color=\"secondary\"\r\n          />\r\n          <Typography className={classes.timer} variant=\"h2\" color=\"secondary\">\r\n            {config.isTimerIncrement()\r\n              ? training.getStepTime(time) / 1000\r\n              : training.getStepTimeDecrement(time) / 1000}\r\n            s\r\n          </Typography>\r\n        </div>\r\n        <Paper variant=\"outlined\" className={classes.paper}>\r\n          <List className={classes.list}>\r\n            {training.getRemainingSteps(time).map((item, i) => {\r\n              return (\r\n                <ListItem\r\n                  button\r\n                  key={`${i}`}\r\n                  onClick={() => setTime(training.getStepStartTime(item.id))}\r\n                >\r\n                  <ListItemText primary={item.title} />\r\n                  <ListItemText\r\n                    primary={`${item.duration / 1000}s`}\r\n                    className={classes.time}\r\n                  />\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </Paper>\r\n        <div className={classes.trainingButtonContainer}>\r\n          <Button\r\n            disabled={!timer.can(\"play\")}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => play()}\r\n            className={classes.trainingButton}\r\n          >\r\n            Play\r\n          </Button>\r\n          <Button\r\n            disabled={!timer.can(\"pause\")}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => pause()}\r\n            className={classes.trainingButton}\r\n          >\r\n            Pause\r\n          </Button>\r\n          <Button\r\n            disabled={!timer.can(\"stop\")}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => stop()}\r\n            className={classes.trainingButton}\r\n          >\r\n            Stop\r\n          </Button>\r\n          <Button\r\n            disabled={!timer.can(\"replay\")}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => replay()}\r\n            className={classes.trainingButton}\r\n          >\r\n            Replay\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MapStateToProps = (state) => ({\r\n  training: Training(state.currTraining),\r\n});\r\n\r\nexport default connect(MapStateToProps)(TrainingRunPage);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Training, { TrainingStep } from \"../../../models/Training\";\r\nimport { addTraining } from \"../../../redux/actions/trainingListAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n}));\r\n\r\nconst TrainingForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { dispatch, open, handleClose } = props;\r\n\r\n  const validationSchema = yup.object({\r\n    title: yup\r\n      .string(\"Donner un nom a votre entrainement\")\r\n      .min(3, \"Le nom doit faire minimum 3 caracteres\")\r\n      .required(\"Le nom est requis\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: { title: \"\" },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      let nextTraining = Training();\r\n      nextTraining.setId().setTitle(values.title).setCollection(\"items\", []);\r\n      console.log(nextTraining);\r\n      dispatch(addTraining(nextTraining));\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        fullWidth\r\n      >\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <DialogTitle id=\"form-dialog-title\">Nouvel entrainement</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              label=\"Nom de l'entrainement\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={formik.values.title}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.title && Boolean(formik.errors.title)}\r\n              helperText={formik.touched.title && formik.errors.title}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              //   onClick={handleClose}\r\n              startIcon={<AddIcon />}\r\n              fullWidth\r\n              type=\"submit\"\r\n            >\r\n              Ajouter le nouvel entrainement\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MapStateToProps = (state) => ({});\r\n\r\nexport default connect(MapStateToProps)(TrainingForm);\r\n","import {\r\n  TRAINING_LIST_SET,\r\n  TRAINING_ADD,\r\n  TRAINING_MOD,\r\n  TRAINING_DEL,\r\n  TRAINING_MOVE,\r\n} from \"../constants\";\r\n\r\nexport const setTrainingList = (payload) => {\r\n  return { type: TRAINING_LIST_SET, payload };\r\n};\r\nexport const addTraining = (payload) => {\r\n  return { type: TRAINING_ADD, payload };\r\n};\r\nexport const modTraining = (payload) => {\r\n  return { type: TRAINING_MOD, payload };\r\n};\r\nexport const delTraining = (payload) => {\r\n  return { type: TRAINING_DEL, payload };\r\n};\r\nexport const moveTraining = (payload) => {\r\n  return { type: TRAINING_MOVE, payload };\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nconst useShowable = (initialState = false) => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const show = () => setState(true);\r\n  const hide = () => setState(false);\r\n  const toggleVisibility = () => setState(!state);\r\n\r\n  return { visible: state, show, hide, toggleVisibility };\r\n};\r\n\r\nexport default useShowable;\r\n","import React, { Dimensions, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  ListItemSecondaryAction,\r\n  Paper,\r\n  CircularProgress,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport AppBar from \"../../components/AppBar/AppBar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport Training from \"../../models/Training\";\r\nimport { config } from \"../../services/services\";\r\nimport {\r\n  delTraining,\r\n  modTraining,\r\n} from \"../../redux/actions/trainingListAction\";\r\nimport { setCurrTraining } from \"../../redux/actions/currTrainingAction\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChevronRight } from \"@material-ui/icons\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport TrainingForm from \"./components/TrainingForm\";\r\nimport useShowable from \"../../hooks/useShowable\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  paper: {\r\n    margin: 10,\r\n  },\r\n  list: {\r\n    justifyContent: \"center\",\r\n  },\r\n  endListButton: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n}));\r\n\r\nconst TrainingListPage = (props) => {\r\n  const classes = useStyles();\r\n  const { trainingList, dispatch, currTraining } = props;\r\n  const { visible, show, hide } = useShowable();\r\n  const history = useHistory();\r\n\r\n  console.log(trainingList);\r\n\r\n  useEffect(() => {\r\n    dispatch(modTraining(currTraining));\r\n    return () => {};\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar title=\"Training\" />\r\n      <Paper variant=\"outlined\" className={classes.paper}>\r\n        <List className={classes.list}>\r\n          {trainingList.list.map((item, i) => {\r\n            let rehydrated = Training(item);\r\n            const navigateToTraining = () => {\r\n              dispatch(setCurrTraining(rehydrated));\r\n              history.push(\"/training\");\r\n            };\r\n            const onDelete = () => {\r\n              dispatch(delTraining(rehydrated));\r\n            };\r\n            return (\r\n              <ListItem button onClick={navigateToTraining} key={i}>\r\n                <ListItemText primary={item.title} />\r\n                <ListItemSecondaryAction>\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    aria-label=\"comments\"\r\n                    onClick={onDelete}\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            );\r\n          })}\r\n          <ListItem>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={show}\r\n              startIcon={<AddIcon />}\r\n              className={classes.endListButton}\r\n            >\r\n              Ajouter\r\n            </Button>\r\n          </ListItem>\r\n        </List>\r\n      </Paper>\r\n      <TrainingForm open={visible} handleClose={hide} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MapStateToProps = (state) => ({\r\n  trainingList: state.trainingList,\r\n  currTraining: Training(state.currTraining),\r\n});\r\n\r\nexport default connect(MapStateToProps)(TrainingListPage);\r\n","import React from \"react\";\r\nimport { BrowserRouter, HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport TrainingPage from \"../screens/TrainingPage/TrainingPage\";\r\nimport TrainingRunPage from \"../screens/TrainingRunPage/TrainingRunPage\";\r\nimport TrainingListPage from \"../screens/TrainingListPage/TrainingListPage\";\r\nimport { config } from \"../services/services\";\r\n\r\nexport default function AppNavigation() {\r\n  const Router = config.isProdEnv() ? HashRouter : BrowserRouter;\r\n  const basename = config.isProdEnv() ? \"/tabata/\" : \"/\";\r\n\r\n  return (\r\n    <Router basename={basename}>\r\n      {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <TrainingListPage />\r\n        </Route>\r\n        <Route path=\"/training\">\r\n          <TrainingPage />\r\n        </Route>\r\n        <Route path=\"/training-run\">\r\n          <TrainingRunPage />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","import Training from \"../../models/Training\";\r\nimport { CURR_TRAINING_SET } from \"../constants\";\r\n\r\nconst initialState = () => {\r\n  return Training().setId(\"default\").setCollection(\"items\", []);\r\n};\r\n\r\nconst currTrainingReducer = (state = initialState(), action) => {\r\n  switch (action.type) {\r\n    case CURR_TRAINING_SET: {\r\n      const nextState = { ...action.payload };\r\n      return nextState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { currTrainingReducer };\r\n","import Training from \"../../models/Training\";\r\nimport {\r\n  TRAINING_LIST_SET,\r\n  TRAINING_ADD,\r\n  TRAINING_MOD,\r\n  TRAINING_DEL,\r\n  TRAINING_MOVE,\r\n} from \"../constants\";\r\n\r\nlet initialTraining = Training();\r\ninitialTraining.setId(\"default\").setCollection(\"items\", []);\r\n\r\nconst initialState = () => ({\r\n  list: [initialTraining],\r\n});\r\n\r\nconst trainingListReducer = (state = initialState(), action) => {\r\n  switch (action.type) {\r\n    case TRAINING_LIST_SET: {\r\n      const nextState = { ...state, list: [...action.payload] };\r\n      return nextState;\r\n    }\r\n    case TRAINING_ADD: {\r\n      const nextList = [...state.list, action.payload];\r\n      const nextState = { ...state, list: nextList };\r\n      return nextState;\r\n    }\r\n    case TRAINING_MOD: {\r\n      const nextTraining = { ...action.payload };\r\n      const nextList = state.list.map((i) => {\r\n        const inner = Training(i);\r\n        return inner.getId() === nextTraining.getId() ? nextTraining : inner;\r\n      });\r\n      const nextState = { ...state, list: nextList };\r\n      return nextState;\r\n    }\r\n    case TRAINING_DEL: {\r\n      const nextTraining = { ...action.payload };\r\n      const nextList = state.list.filter((i) => {\r\n        const inner = Training(i);\r\n        return inner.getId() !== nextTraining.getId();\r\n      });\r\n      const nextState = { ...state, list: nextList };\r\n      return nextState;\r\n    }\r\n    case TRAINING_MOVE: {\r\n      const { indexA, indexB } = action.payload;\r\n\r\n      let nextList = [...state.list];\r\n      const tmp = nextList[indexA];\r\n      nextList[indexA] = nextList[indexB];\r\n      nextList[indexB] = tmp;\r\n      const nextState = { ...state, list: nextList };\r\n      return nextState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { trainingListReducer };\r\n","import { createStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport { currTrainingReducer } from \"./reducers/currTrainingReducer\";\r\nimport { trainingListReducer } from \"./reducers/trainingListReducer\";\r\n\r\nconst rootReducers = combineReducers({\r\n  trainingList: trainingListReducer,\r\n  currTraining: currTrainingReducer,\r\n});\r\n\r\n// convert object to string and store in localStorage\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serialisedState = JSON.stringify(state);\r\n    localStorage.setItem(\"persistantState\", serialisedState);\r\n  } catch (e) {\r\n    console.warn(e);\r\n  }\r\n}\r\n\r\n// load string from localStarage and convert into an Object\r\n// invalid output must be undefined\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serialisedState = localStorage.getItem(\"persistantState\");\r\n    if (serialisedState === null) return undefined;\r\n    return JSON.parse(serialisedState);\r\n  } catch (e) {\r\n    console.warn(e);\r\n    return undefined;\r\n  }\r\n}\r\n\r\n// create our store from our rootReducers and use loadFromLocalStorage\r\n// to overwrite any values that we already have saved\r\nconst store = createStore(rootReducers, loadFromLocalStorage());\r\n\r\n// listen for store changes and use saveToLocalStorage to\r\n// save them to localStorage\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\nexport { store };\r\n","import React from \"react\";\nimport AppNavigation from \"../navigation/AppNavigation\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"../redux/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div id=\"app\">\n        <AppNavigation />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  //   <React.StrictMode>\n  <App />,\n  //   </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}