{"version":3,"sources":["screens/TrainingRunPage/TrainingRunPage.js","components/AppBar/AppBar.js","screens/TrainingPage/components/Item.js","models/handlers/handlers.js","models/Maths.js","models/Training.js","redux/constants.js","redux/actions/trainingListAction.js","redux/actions/currTrainingAction.js","screens/TrainingPage/components/ExerciseForm.js","constants/constants.js","models/Config.js","services/services.js","_config/config.js","redux/actions/currTrainingStepAction.js","screens/TrainingPage/components/TrainingStepFormMod.js","hooks/useShowable.js","screens/TrainingPage/TrainingPage.js","models/Timer.js","hooks/useTimer.js","screens/TrainingListPage/components/TrainingFormAdd.js","screens/TrainingListPage/components/TrainingFormMod.js","screens/TrainingListPage/TrainingListPage.js","navigation/AppNavigation.js","redux/reducers/currTrainingReducer.js","redux/reducers/currTrainingStepReducer.js","redux/reducers/trainingListReducer.js","redux/store.js","App/App.js","reportWebVitals.js","index.js"],"names":["beepIndex","useStyles","makeStyles","theme","root","flexGrow","menuButton","leftButtonContainer","flex","title","textAlign","right","withRouter","props","backIcon","history","classes","className","position","Toolbar","IconButton","edge","color","aria-label","onClick","goBack","Typography","variant","time","Item","onPress","onDelete","ListItem","button","ListItemText","primary","ListItemSecondaryAction","canHandleInit","state","fromLastState","lastState","Object","assign","re","fromCollection","collection","test","find","i","fromCollectionById","id","getId","fromCollectionByKey","key","getKey","canHandleTitle","getTitle","setTitle","v","canHandleId","setId","uuidv4","canHandleVisibility","setVisible","visible","hide","show","canHandleDuration","getDuration","duration","setDuration","canHandleCollection","getCollection","getFirst","length","getLast","setCollection","items","getItemById","item","getItemByKey","getItemIndexById","keys","index","addItem","addItemStart","addItemAfterAnother","another","splice","delItemById","filter","delItemByIndex","delItemByKey","modItemById","nextItem","map","modItemByIndex","modItemByKey","justReorder","list","startIndex","endIndex","result","Array","from","removed","reorder","canHandleRange","belongRange","min","max","n","belongRangeMax","belongRangeMin","outRange","Maths","behavior","TrainingStep","canHandleTrainingSteps","getStepByTimeWithRange","maths","getStepByTime","getStepIndex","getStepInstant","stepTime","percent","getStepTime","getStepTimeDecrement","timerTime","getStepPercent","getPercent","isEnded","getRemainingSteps","getStepStartTime","start","isStepEnded","step","isStepStarted","TrainingList","Training","CURR_TRAINING_STEP_SET","CURR_TRAINING_SET","TRAINING_LIST_SET","TRAINING_ADD","TRAINING_MOD","TRAINING_DEL","TRAINING_MOVE","modTraining","payload","type","setCurrTraining","connect","training","currTraining","dispatch","open","handleClose","validationSchema","yup","required","positive","integer","default","reposDuration","formik","useFormik","initialValues","onSubmit","values","nextTraining","nextDuration","nextReposDuration","repos","Dialog","onClose","aria-labelledby","fullWidth","handleSubmit","DialogTitle","DialogContent","TextField","autoFocus","margin","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","DialogActions","Button","startIcon","ENV_DEV","ENV_PROD","TIMER_INCREMENT","TIMER_DECREMENT","canHandleConfig","isDevEnv","env","isProdEnv","setDevEnv","setProdEnv","setTimeDirection","timeDirection","setTimeDirectionIncrement","setTimeDirectionDecrement","isTimerIncrement","isTimerDecrement","setTimerBeep","timerBeep","init","Config","config","prodConfig","appConfig","setCurrTrainingStep","trainingStep","currTrainingStep","nextTrainingStep","useShowable","initialState","useState","setState","toggleVisibility","paper","justifyContent","height","window","innerHeight","iconContainer","endListButton","marginLeft","marginRight","endListButtonContainer","display","padding","trainingButtonContainer","width","bottom","trainingButton","addForm","modForm","Paper","onDragEnd","destination","srcIndex","source","destIndex","droppableId","provided","snapshot","List","droppableProps","ref","innerRef","rehydrated","draggableId","draggableProps","dragHandleProps","style","placeholder","href","disabled","Timer","getActions","actions","setActions","can","action","canHandleActions","initTimer","isRunning","setTime","increment","ms","isNaN","decrement","play","replay","pause","stop","canHandleTimer","useTimer","useEffect","timer","setInterval","clearInterval","body","flexDirection","alignItems","paddingTop","paddingBottom","maxHeight","progressArea","marginBottom","circleOutBg","palette","grey","circleOut","marginTop","circleInBg","circleIn","beep","url","Audio","audio","playing","setPlaying","addEventListener","removeEventListener","toggle","useAudio","stepIndex","CircularProgress","size","trainingList","useHistory","nextTrainingList","navigateToTraining","push","editTraining","AppNavigation","Router","HashRouter","BrowserRouter","basename","exact","path","TrainingPage","rootReducers","combineReducers","nextState","nextList","inner","indexA","indexB","tmp","store","createStore","serialisedState","localStorage","getItem","JSON","parse","e","console","warn","loadFromLocalStorage","subscribe","stringify","setItem","saveToLocalStorage","getState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gfAqHIA,E,+ICzGEC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,GAGZC,oBAAqB,CACnBC,KAAM,GAGRC,MAAO,CACLJ,SAAU,EACVK,UAAW,UAGbC,MAAO,CAGLH,KAAM,OAkCKI,eA9BA,SAACC,GAAW,IACjBJ,EAA6BI,EAA7BJ,MAAOK,EAAsBD,EAAtBC,SAAUC,EAAYF,EAAZE,QACnBC,EAAUf,IAEhB,OACE,qBAAKgB,UAAWD,EAAQZ,KAAxB,SACE,cAAC,IAAD,CAAWc,SAAS,SAApB,SACE,eAACC,EAAA,EAAD,WACGL,GACC,qBAAKG,UAAWD,EAAQT,oBAAxB,SACE,cAACa,EAAA,EAAD,CACEC,KAAK,QACLJ,UAAWD,EAAQV,WACnBgB,MAAM,UACNC,aAAW,OACXC,QAAS,kBAAMT,EAAQU,UALzB,SAOE,cAAC,IAAD,QAIN,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKV,UAAWD,EAAQP,MAA5C,SACGA,IAEFK,GAAY,cAACY,EAAA,EAAD,CAAYT,UAAWD,EAAQP,MAA/B,yB,sECpDjBR,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GACNwB,KAAM,CAAElB,UAAW,WAqBNmB,EAlBF,SAAChB,GACZ,IAAMG,EAAUf,IAERQ,EAAyDI,EAAzDJ,MAAOmB,EAAkDf,EAAlDe,KAHO,EAG2Cf,EAA5CiB,eAHC,MAGS,aAHT,IAG2CjB,EAAxBkB,gBAHnB,MAG8B,aAH9B,EAKtB,OACE,eAACC,EAAA,EAAD,CAAUC,QAAM,EAACT,QAASM,EAA1B,UACE,cAACI,EAAA,EAAD,CAAcC,QAAS1B,IACvB,cAACyB,EAAA,EAAD,CAAcjB,UAAWD,EAAQY,KAAMO,QAAO,UAAKP,EAAO,IAAZ,OAC9C,cAACQ,EAAA,EAAD,UACE,cAAChB,EAAA,EAAD,CAAYC,KAAK,MAAME,aAAW,WAAWC,QAASO,EAAtD,SACE,cAAC,IAAD,Y,sGCrBGM,EAAgB,SAACC,GAAD,MAAY,CACvCC,cAAe,SAACC,GAEd,OADAC,OAAOC,OAAOJ,EAAOE,GACdF,GAETK,GAAI,SAACH,GAEH,OADAC,OAAOC,OAAOJ,EAAOE,GACdF,GAETM,eAAgB,SAACC,EAAYC,GAC3B,OAAOR,EAAMK,GAAGE,EAAWE,MAAK,SAACC,GAAD,OAAOF,EAAKR,EAAMK,GAAGK,SAEvDC,mBAAoB,SAACJ,EAAYK,GAE/B,OAAOZ,EAAMM,eAAeC,GADf,SAACP,GAAD,OAAWA,EAAMa,UAAYD,MAG5CE,oBAAqB,SAACP,EAAYQ,GAEhC,OAAOf,EAAMM,eAAeC,GADf,SAACP,GAAD,OAAWA,EAAMgB,WAAaD,QAKlCE,EAAiB,SAACjB,GAAD,MAAY,CACxCkB,SAAU,kBAAMlB,EAAM7B,OACtBgD,SAAU,SAACC,GAET,OADApB,EAAM7B,MAAQiD,EACPpB,KAIEqB,EAAc,SAACrB,GAAD,MAAY,CACrCa,MAAO,kBAAMb,EAAMY,IACnBU,MAAO,WAAmB,IAAlBF,EAAiB,uDAAbG,cAEV,OADAvB,EAAMY,GAAKQ,EACJpB,KAIEwB,EAAsB,SAACxB,GAAD,MAAY,CAC7CyB,WAAY,SAACL,GAEX,OADApB,EAAM0B,QAAUN,EACTpB,GAET2B,KAAM,kBAAM3B,EAAMyB,YAAW,IAC7BG,KAAM,kBAAM5B,EAAMyB,YAAW,MAGlBI,EAAoB,SAAC7B,GAAD,MAAY,CAC3C8B,YAAa,kBAAM9B,EAAM+B,UACzBC,YAAa,SAACZ,GAEZ,OADApB,EAAM+B,SAAWX,EACVpB,KAIEiC,EAAsB,SAACjC,GAAD,MAAY,CAC7CkC,cAAe,SAAC3B,GAAD,OAAgBP,EAAMO,IACrC4B,SAAU,SAAC5B,GACT,OAAOP,EAAMO,GAAY6B,QAAU,EAAIpC,EAAMO,GAAY,GAAK,MAEhE8B,QAAS,SAAC9B,GACR,IAAM6B,EAASpC,EAAMO,GAAY6B,OACjC,OAAOA,GAAU,EAAIpC,EAAMO,GAAY6B,EAAS,GAAK,MAEvDE,cAAe,SAAC/B,EAAYgC,GAE1B,OADAvC,EAAMO,GAAcgC,EACbvC,GAETwC,YAAa,SAACjC,EAAYK,GAAQ,IAAD,gBACZZ,EAAMO,IADM,IAC/B,gCAAWkC,EAAX,QAAsC,GAAIA,EAAK5B,UAAYD,EAAI,OAAO6B,GADvC,gCAGjCC,aAAc,SAACnC,EAAYQ,GAAS,IAAD,gBACdf,EAAMO,IADQ,IACjC,2BAAsC,CAAC,IAA5BkC,EAA2B,QACpC,GAAIA,EAAKzB,WAAaD,EAAK,OAAO0B,GAFH,gCAKnCE,iBAAkB,SAACpC,EAAYK,GAAQ,IAAD,gBAChBZ,EAAMO,GAAYqC,QADF,IACpC,2BAA8C,CAAC,IAApCC,EAAmC,QAC5C,GAAI7C,EAAMO,GAAYsC,GAAOhC,UAAYD,EAAI,OAAOiC,GAFlB,gCAKtCC,QAAS,SAACvC,EAAYkC,GAIpB,OAHIzC,EAAMO,GACRP,EAAMO,GAAN,sBAAwBP,EAAMO,IAA9B,CAA2CkC,IACtCzC,EAAMO,GAAc,CAACkC,GACrBzC,GAET+C,aAAc,SAACxC,EAAYkC,GAEzB,OADAzC,EAAMO,GAAN,CAAqBkC,GAArB,mBAA8BzC,EAAMO,KAC7BP,GAETgD,oBAAqB,SAACzC,EAAYkC,EAAMQ,GACtC,IAAMJ,EAAQ7C,EAAM2C,iBAAiBpC,EAAY0C,EAAQrC,IAEzD,OADAZ,EAAMO,GAAY2C,OAAOL,EAAQ,EAAG,EAAGJ,GAChCzC,GAETmD,YAAa,SAAC5C,EAAYK,GAExB,OADAZ,EAAMO,GAAcP,EAAMO,GAAY6C,QAAO,SAACX,GAAD,OAAUA,EAAK5B,UAAYD,KACjEZ,GAETqD,eAAgB,SAAC9C,EAAYsC,GAE3B,OADA7C,EAAMO,GAAcP,EAAMO,GAAY6C,QAAO,SAACX,EAAM/B,GAAP,OAAaA,IAAMmC,KACzD7C,GAETsD,aAAc,SAAC/C,EAAYQ,GAIzB,OAHAf,EAAMO,GAAcP,EAAMO,GAAY6C,QACpC,SAACX,GAAD,OAAUA,EAAKzB,WAAaD,KAEvBf,GAETuD,YAAa,SAAChD,EAAYiD,GAKxB,OAJAxD,EAAMO,GAAcP,EAAMO,GAAYkD,KAAI,SAAChB,GACzC,OAAIA,EAAK7B,KAAO4C,EAAS5C,GAAW4C,EACxBf,KAEPzC,GAET0D,eAAgB,SAACnD,EAAYiD,EAAUX,GAKrC,OAJA7C,EAAMO,GAAcP,EAAMO,GAAYkD,KAAI,SAAChB,EAAM/B,GAC/C,OAAIA,IAAMmC,EAAcW,EACZf,KAEPzC,GAET2D,aAAc,SAACpD,EAAYiD,GAKzB,OAJAxD,EAAMO,GAAcP,EAAMO,GAAYkD,KAAI,SAAChB,GACzC,OAAIA,EAAKzB,WAAawC,EAASxC,SAAiBwC,EACpCf,KAEPzC,GAET4D,YAAa,SAACC,EAAMC,EAAYC,GAC9B,IAAMC,EAASC,MAAMC,KAAKL,GADiB,EAEzBG,EAAOd,OAAOY,EAAY,GAArCK,EAFoC,oBAI3C,OADAH,EAAOd,OAAOa,EAAU,EAAGI,GACpBH,GAETI,QAAS,SAAC7D,EAAYuD,EAAYC,GAMhC,OALA/D,EAAMO,GAAcP,EAAM4D,YACxB5D,EAAMO,GACNuD,EACAC,GAEK/D,KCvILqE,EAAiB,SAACrE,GAAD,MAAY,CACjCsE,YAAa,SAACC,EAAKC,EAAKC,GAAX,OAAiBF,GAAOE,GAAKA,GAAKD,GAC/CE,eAAgB,SAACH,EAAKC,EAAKC,GAAX,OAAiBF,EAAME,GAAKA,GAAKD,GACjDG,eAAgB,SAACJ,EAAKC,EAAKC,GAAX,OAAiBF,GAAOE,GAAKA,EAAID,GACjDI,SAAU,SAACL,EAAKC,EAAKC,GAAX,OAAiBA,GAAKF,GAAOC,GAAOC,KAGjCI,EAjBD,WACZ,IAAI7E,EAAQ,GAMZ,OADAG,OAAOC,OAAOJ,EAHG,SAACA,GAAD,sBACZqE,EAAerE,IAEC8E,CAAS9E,IACvBA,EAUM6E,GCPTE,EAAe,WAAqB,IAApB7E,EAAmB,uDAAP,GAC5BF,EAAK,eAAQE,GAEX4E,EAAW,SAAC9E,GAAD,mBAAC,mDACbqB,EAAYrB,IACZiB,EAAejB,IACf6B,EAAkB7B,IAClBwB,EAAoBxB,IACpBD,EAAcC,KAGnB,OADAG,OAAOC,OAAOJ,EAAO8E,EAAS9E,IACvBA,GAGHgF,EAAyB,SAAChF,GAAD,MAAY,CACzCiF,uBAAwB,SAAC3F,GACvB,IAAIiF,EAAM,EACNC,EAAM,EACN3B,EAAQ,EACRJ,EAAOzC,EAAMuC,MAAM9B,MAAK,SAACgC,GAI3B,OAHA8B,EAAMC,EACNA,GAAO/B,EAAKV,SACZc,IACOqC,EAAMP,eAAeJ,EAAKC,EAAKlF,MAGxC,OADKmD,IAAMA,EAAOzC,EAAMuC,MAAMvC,EAAMuC,MAAMH,OAAS,IAC5C,CAAEK,OAAM8B,MAAKC,MAAK3B,UAE3BsC,cAAe,SAAC7F,GAAD,OAAUU,EAAMiF,uBAAuB3F,GAAMmD,MAC5D2C,aAAc,SAAC9F,GAAD,OAAUU,EAAMiF,uBAAuB3F,GAAMuD,OAC3DwC,eAAgB,SAAC/F,GAAU,IAAD,EACFU,EAAMiF,uBAAuB3F,GAA3CmD,EADgB,EAChBA,KAAM8B,EADU,EACVA,IACRe,EAAWf,EAAMjF,EAAOiF,EAAMjF,EAEpC,MAAO,CAAEmD,OAAMnD,KAAMgG,EAAUC,QADf9C,EAAO6C,EAAW7C,EAAKV,SAAW,IAGpDyD,YAAa,SAAClG,GAAD,OAAUU,EAAMqF,eAAe/F,GAAMA,MAClDmG,qBAAsB,SAACC,GAAe,IAAD,EACZ1F,EAAMqF,eAAeK,GAApCjD,EAD2B,EAC3BA,KAAMnD,EADqB,EACrBA,KAEd,OADkBmD,EAAKV,SAAWzC,GAGpCqG,eAAgB,SAACrG,GAAD,OAAUU,EAAMqF,eAAe/F,GAAMiG,SACrDzD,YAAa,WACX,IAAIC,EAAW,EAEf,OADA/B,EAAMuC,MAAMkB,KAAI,SAAChB,GAAD,OAAWV,GAAYU,EAAKV,YACrCA,GAET6D,WAAY,SAACtG,GAAD,OAAUA,EAAOU,EAAM8B,eACnC+D,QAAS,SAACvG,GAAD,OAAUA,GAAQU,EAAM8B,eACjCgE,kBAAmB,SAACxG,GAClB,IAAMuD,EAAQ7C,EAAMiF,uBAAuB3F,GAAMuD,MAEjD,OADmB7C,EAAMuC,MAAMa,QAAO,SAACX,EAAM/B,GAAP,OAAaA,GAAKmC,MAG1DkD,iBAAkB,SAACnF,GACjB,IADwB,EACpBoF,EAAQ,EADY,cAELhG,EAAMuC,OAFD,IAExB,2BAAgC,CAAC,IAAtBE,EAAqB,QAC9B,GAAIA,EAAK7B,KAAOA,EAAI,MACpBoF,GAASvD,EAAKV,UAJQ,8BAMxB,OAAOiE,GAETC,YAAa,SAAC3G,GACZ,IAAM4G,EAAOlG,EAAMqF,eAAe/F,GAClC,OAAO4G,EAAK5G,OAAS4G,EAAKzD,KAAKV,UAEjCoE,cAAe,SAAC7G,GAEd,OAAqB,IADRU,EAAMqF,eAAe/F,GACtBA,QAkBV8G,GAAe,WAAqB,IAApBlG,EAAmB,uDAAP,GAC5BF,EAAK,eAAQE,GAEX4E,EAAW,SAAC9E,GAAD,mBAAC,eACbqB,EAAYrB,IACZiC,EAAoBjC,KAGzB,OADAG,OAAOC,OAAOJ,EAAO8E,EAAS9E,IACvBA,GAIMqG,GA1BE,WAAqB,IAApBnG,EAAmB,uDAAP,GACxBF,EAAK,eAAQE,GAEX4E,EAAW,SAAC9E,GAAD,mBAAC,mDACbqB,EAAYrB,IACZiB,EAAejB,IACfiC,EAAoBjC,IACpBgF,EAAuBhF,IACvBD,EAAcC,KAGnB,OADAG,OAAOC,OAAOJ,EAAO8E,EAAS9E,IACvBA,GC9FIsG,GAAyB,yBACzBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAe,eACfC,GAAe,eACfC,GAAe,eACfC,GAAgB,gBCQhBC,GAAc,SAACC,GAC1B,MAAO,CAAEC,KAAML,GAAcI,YCblBE,GAAkB,SAACF,GAC9B,MAAO,CAAEC,KAAMR,GAAmBO,YCe9BnJ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,OA2HOmJ,gBAJS,SAACjH,GAAD,MAAY,CAClCkH,SAAUlH,EAAMmH,gBAGHF,EAxHM,SAAC1I,GACpB,IAAMG,EAAUf,KAERyJ,EAA0C7I,EAA1C6I,SAAUF,EAAgC3I,EAAhC2I,SAAUG,EAAsB9I,EAAtB8I,KAAMC,EAAgB/I,EAAhB+I,YAE5BC,EAAmBC,IAAW,CAClCrJ,MAAOqJ,IACG,+BACPjD,IAAI,EAAG,0CACPkD,SAAS,qBACZ1F,SAAUyF,IACA,gCACPC,SAAS,UACTC,SAAS,yBACTC,QAAQ,iBACRC,QAAQ,IACXC,cAAeL,IACL,gCACPC,SAAS,UACTlD,IAAI,EAAG,aACPoD,QAAQ,iBACRC,QAAQ,MAGPE,EAASC,YAAU,CACvBC,cAAe,CAAE7J,MAAO,IACxBoJ,iBAAkBA,EAClBU,SAAU,SAACC,GACT,IAAIC,EAAe9B,GAASa,GACtBkB,EAAiC,IAAlBF,EAAOnG,SACtBsG,EAA2C,IAAvBH,EAAOL,cAC7BpF,EAAOsC,IAAezD,MAAM6G,EAAa5F,MAAMH,QAGnD,GAFAK,EAAKtB,SAAS+G,EAAO/J,OAAO6D,YAAYoG,GAAcxG,OACtDuG,EAAarF,QAAQ,QAASL,GAC1ByF,EAAOL,eAA0C,MAAzBK,EAAOL,cAAuB,CACxD,IAAIS,EAAQvD,IAAezD,MAAM6G,EAAa5F,MAAMH,QACpDkG,EAAMnH,SAAS,SAASa,YAAYqG,GAAmB1G,OACvDwG,EAAarF,QAAQ,QAASwF,GAEhClB,EAASJ,GAAgBmB,IACzBf,EAASP,GAAYsB,OAIzB,OACE,qBAAKxJ,UAAWD,EAAQZ,KAAxB,SACE,cAACyK,EAAA,EAAD,CACElB,KAAMA,EACNmB,QAASlB,EACTmB,kBAAgB,oBAChBC,WAAS,EAJX,SAME,uBAAMT,SAAUH,EAAOa,aAAvB,UACE,cAACC,EAAA,EAAD,CAAahI,GAAG,oBAAhB,6BACA,eAACiI,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPpI,GAAG,QACHqI,KAAK,QACLC,MAAM,oBACNnC,KAAK,OACL2B,WAAS,EACTS,MAAOrB,EAAOI,OAAO/J,MACrBiL,SAAUtB,EAAOuB,aACjBC,MAAOxB,EAAOyB,QAAQpL,OAASqL,QAAQ1B,EAAO2B,OAAOtL,OACrDuL,WAAY5B,EAAOyB,QAAQpL,OAAS2J,EAAO2B,OAAOtL,QAEpD,cAAC2K,EAAA,EAAD,CACEE,OAAO,QACPpI,GAAG,WACHqI,KAAK,WACLC,MAAM,sBACNnC,KAAK,OACL2B,WAAS,EACTS,MAAOrB,EAAOI,OAAOnG,SACrBqH,SAAUtB,EAAOuB,aACjBC,MAAOxB,EAAOyB,QAAQxH,UAAYyH,QAAQ1B,EAAO2B,OAAO1H,UACxD2H,WAAY5B,EAAOyB,QAAQxH,UAAY+F,EAAO2B,OAAO1H,WAEvD,cAAC+G,EAAA,EAAD,CACEE,OAAO,QACPpI,GAAG,gBACHqI,KAAK,gBACLC,MAAM,kCACNnC,KAAK,OACL2B,WAAS,EACTS,MAAOrB,EAAOI,OAAOL,cACrBuB,SAAUtB,EAAOuB,aACjBC,MACExB,EAAOyB,QAAQ1B,eACf2B,QAAQ1B,EAAO2B,OAAO5B,eAExB6B,WACE5B,EAAOyB,QAAQ1B,eAAiBC,EAAO2B,OAAO5B,mBAIpD,cAAC8B,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEvK,QAAQ,WACRL,MAAM,YAEN6K,UAAW,cAAC,IAAD,IACXnB,WAAS,EACT3B,KAAK,SANP,4CCzHC+C,GAAU,UACVC,GAAW,WACXC,GAAkB,YAClBC,GAAkB,YCmBlBC,GAAkB,SAAClK,GAAD,MAAY,CACzCmK,SAAU,kBAAMnK,EAAMoK,MAAQN,IAC9BO,UAAW,kBAAMrK,EAAMoK,MAAQL,IAC/BO,UAAW,WAET,OADAtK,EAAMoK,IAAMN,GACL9J,GAETuK,WAAY,WAEV,OADAvK,EAAMoK,IAAML,GACL/J,GAETwK,iBAAkB,SAACpJ,GAEjB,OADApB,EAAMyK,cAAgBrJ,EACfpB,GAET0K,0BAA2B,kBAAM1K,EAAMwK,iBAAiBR,KACxDW,0BAA2B,kBAAM3K,EAAMwK,iBAAiBP,KACxDW,iBAAkB,kBAAM5K,EAAMyK,gBAAkBT,IAChDa,iBAAkB,kBAAM7K,EAAMyK,gBAAkBR,IAChDa,aAAc,SAAC1J,GAEb,OADApB,EAAM+K,UAAY3J,EACXpB,GAETgL,KAAM,WAAgB,IAAfA,EAAc,uDAAP,GAGZ,OAFIA,EAAKZ,MAAKpK,EAAMoK,IAAMY,EAAKZ,KAC3BY,EAAKP,gBAAezK,EAAMyK,cAAgBO,EAAKP,eAC5CzK,KAIIiL,GA7CA,WAAqB,IAApB/K,EAAmB,uDAAP,GACtBF,EAAK,aACPoK,IAAKN,GACLW,cAAeR,GACfc,UAAW,gDACR7K,GAGC4E,EAAW,SAAC9E,GAAD,sBACZkK,GAAgBlK,KAGrB,OADAG,OAAOC,OAAOJ,EAAO8E,EAAS9E,IACvBA,G,6BChBHkL,GAASD,GCGM,CACnBb,IAHgBe,GAGDf,IACfK,cAAeW,GAAUX,cACzBM,UAAWK,GAAUL,YCPVM,GAAsB,SAACvE,GAClC,MAAO,CAAEC,KAAMT,GAAwBQ,YCgBnCnJ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,OAkIOmJ,gBALS,SAACjH,GAAD,MAAY,CAClCkH,SAAUlH,EAAMmH,aAChBmE,aAActL,EAAMuL,oBAGPtE,EA/Ha,SAAC1I,GAC3B,IAAMG,EAAUf,KAERyJ,EAAwD7I,EAAxD6I,SAAUF,EAA8C3I,EAA9C2I,SAAUoE,EAAoC/M,EAApC+M,aAAcjE,EAAsB9I,EAAtB8I,KAAMC,EAAgB/I,EAAhB+I,YAE1CC,EAAmBC,IAAW,CAClCrJ,MAAOqJ,IACG,sCACPjD,IAAI,EAAG,0CACPkD,SAAS,qBACZ1F,SAAUyF,IACA,gCACPC,SAAS,UACTC,SAAS,yBACTC,QAAQ,iBACRC,QAAQ,IACXC,cAAeL,IACL,gCACPC,SAAS,UACTlD,IAAI,EAAG,aACPoD,QAAQ,iBACRC,QAAQ,MAGPE,EAASC,YAAU,CACvBC,cAAe,CACb7J,MAAOmN,EAAanN,MAAQmN,EAAanN,MAAQ,GACjD4D,SAAUuJ,EAAavJ,SAAW,KAEpCwF,iBAAkBA,EAClBU,SAAU,SAACC,GACT,IAAIsD,EAAmBzG,EAAauG,GACpCE,EAAiBrK,SAAS+G,EAAO/J,OACjCqN,EAAiBxJ,YAA8B,IAAlBkG,EAAOnG,UACpCqF,EAASiE,GAAoBG,IAC7B,IAAIrD,EAAe9B,GAASa,GAE5B,GADAiB,EAAa5E,YAAY,QAASiI,GAC9BtD,EAAOL,eAA0C,MAAzBK,EAAOL,cAAuB,CACxD,IAAMQ,EAA2C,IAAvBH,EAAOL,cAC7BS,EAAQvD,IAAezD,MAAM6G,EAAa5F,MAAMH,QACpDkG,EAAMnH,SAAS,SAASa,YAAYqG,GAAmB1G,OACvDwG,EAAanF,oBAAoB,QAASsF,EAAOkD,GAEnDpE,EAASJ,GAAgBmB,IACzBf,EAASP,GAAYsB,OAIzB,OACE,qBAAKxJ,UAAWD,EAAQZ,KAAxB,SACE,cAACyK,EAAA,EAAD,CACElB,KAAMA,EACNmB,QAASlB,EACTmB,kBAAgB,oBAChBC,WAAS,EAJX,SAME,uBAAMT,SAAUH,EAAOa,aAAvB,UACE,cAACC,EAAA,EAAD,CAAahI,GAAG,oBAAhB,qCAGA,eAACiI,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPpI,GAAG,QACHqI,KAAK,QACLC,MAAM,wBACNnC,KAAK,OACL2B,WAAS,EACTS,MAAOrB,EAAOI,OAAO/J,MACrBiL,SAAUtB,EAAOuB,aACjBC,MAAOxB,EAAOyB,QAAQpL,OAASqL,QAAQ1B,EAAO2B,OAAOtL,OACrDuL,WAAY5B,EAAOyB,QAAQpL,OAAS2J,EAAO2B,OAAOtL,QAEpD,cAAC2K,EAAA,EAAD,CACEE,OAAO,QACPpI,GAAG,WACHqI,KAAK,WACLC,MAAM,sBACNnC,KAAK,OACL2B,WAAS,EACTS,MAAOrB,EAAOI,OAAOnG,SACrBqH,SAAUtB,EAAOuB,aACjBC,MAAOxB,EAAOyB,QAAQxH,UAAYyH,QAAQ1B,EAAO2B,OAAO1H,UACxD2H,WAAY5B,EAAOyB,QAAQxH,UAAY+F,EAAO2B,OAAO1H,WAEvD,cAAC+G,EAAA,EAAD,CACEE,OAAO,QACPpI,GAAG,gBACHqI,KAAK,gBACLC,MAAM,6CACNnC,KAAK,OACL2B,WAAS,EACTS,MAAOrB,EAAOI,OAAOL,cACrBuB,SAAUtB,EAAOuB,aACjBC,MACExB,EAAOyB,QAAQ1B,eACf2B,QAAQ1B,EAAO2B,OAAO5B,eAExB6B,WACE5B,EAAOyB,QAAQ1B,eAAiBC,EAAO2B,OAAO5B,mBAIpD,cAAC8B,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEvK,QAAQ,WACRL,MAAM,YAEN6K,UAAW,cAAC,IAAD,IACXnB,WAAS,EACT3B,KAAK,SANP,iDCpHG0E,GAVK,WAA2B,IAA1BC,EAAyB,0DAClBC,mBAASD,GADS,mBACrC1L,EADqC,KAC9B4L,EAD8B,KAGtChK,EAAO,kBAAMgK,GAAS,IACtBjK,EAAO,kBAAMiK,GAAS,IACtBC,EAAmB,kBAAMD,GAAU5L,IAEzC,MAAO,CAAE0B,QAAS1B,EAAO4B,OAAMD,OAAMkK,qB,SCiBjClO,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GACNgO,MAAO,CACL9C,OAAQ,IAEVnF,KAAM,CACJkI,eAAgB,SAChBC,OAA6B,IAArBC,OAAOC,YACf,aAAc,UAEhBC,cAAe,CACbJ,eAAgB,YAElBK,cAAe,CACbC,WAAY,OACZC,YAAa,QAEfC,uBAAwB,CACtBC,QAAS,OACTT,eAAgB,SAChBU,QAAS,GAEXC,wBAAyB,CACvB9N,SAAU,WACV4N,QAAS,OACTG,MAAO,OACPC,OAAQ,IAEVC,eAAgB,CACd3O,KAAM,EACNmO,WAAY,GACZC,YAAa,QA6GFrF,gBAJS,SAACjH,GAAD,MAAY,CAClCkH,SAAUb,GAASrG,EAAMmH,iBAGZF,EAzGW,SAAC1I,GAAW,IAC5B6I,EAAuB7I,EAAvB6I,SAAUF,EAAa3I,EAAb2I,SACZxI,EAAUf,KAEVmP,EAAUrB,KACVsB,EAAUtB,KAYhB,OACE,sBAAK9M,UAAWD,EAAQZ,KAAxB,UACE,cAAC,EAAD,CAAQK,MAAO+I,EAAS/I,MAAOK,UAAU,IACzC,eAACwO,EAAA,EAAD,CAAO3N,QAAQ,WAAWV,UAAWD,EAAQoN,MAA7C,UACE,cAAC,KAAD,CAAiBmB,UAdL,SAACjJ,GACjB,GAAKA,EAAOkJ,YAAZ,CACA,IAAMC,EAAWnJ,EAAOoJ,OAAOvK,MACzBwK,EAAYrJ,EAAOkJ,YAAYrK,MACjCsF,EAAe9B,GAASa,GAC5BiB,EAAa/D,QAAQ,QAAS+I,EAAUE,GACxCjG,EAASJ,GAAgBmB,IACzBf,EAASP,GAAYsB,MAOjB,SACE,cAAC,KAAD,CAAWmF,YAAa,WAAxB,SACG,SAACC,EAAUC,GAAX,OACC,eAACC,EAAA,EAAD,yBACE9O,UAAWD,EAAQmF,MACf0J,EAASG,gBAFf,IAGEC,IAAKJ,EAASK,SAHhB,UAKG1G,EAAS3E,MAAMkB,KAAI,SAAChB,EAAM/B,GACzB,IAAMmN,EAAa9I,EAAatC,GAC1B7B,EAAK,KAAO6B,EAAK7B,GACvB,OACE,cAAC,KAAD,CAAoBkN,YAAalN,EAAIiC,MAAOnC,EAA5C,SACG,SAAC6M,EAAUC,GAAX,OACC,yDACEG,IAAKJ,EAASK,UACVL,EAASQ,gBACTR,EAASS,iBAHf,IAIEC,MAAOV,EAASQ,eAAeE,MAJjC,SAME,cAAC,EAAD,CAEE9P,MAAO0P,EAAW1P,MAClBmB,KAAMuO,EAAW9L,SACjBvC,QAAS,WACP4H,EAASiE,GAAoBwC,IAC7Bd,EAAQnL,QAEVnC,SAAU,WACR,IAAI0I,EAAe9B,GAASa,GAC5BiB,EAAa9E,eAAe,QAAS3C,GACrC0G,EAASJ,GAAgBmB,MAVtBzH,QATGE,MA2BnB2M,EAASW,qBAKlB,qBAAKvP,UAAWD,EAAQ6N,uBAAxB,SACE,cAAC3C,EAAA,EAAD,CACEvK,QAAQ,WACRL,MAAM,YACNE,QAAS4N,EAAQlL,KACjBiI,UAAW,cAAC,IAAD,IACXlL,UAAWD,EAAQ0N,cALrB,0BAWJ,qBAAKzN,UAAWD,EAAQgO,wBAAxB,SACE,cAAC9C,EAAA,EAAD,CACEvK,QAAQ,YACRL,MAAM,UACNmP,KAAMjD,GAAOb,YAAc,iBAAmB,gBAC9C1L,UAAWD,EAAQmO,eACnBuB,SAAoC,IAA1BlH,EAAS3E,MAAMH,OAL3B,4BAUD0K,EAAQpL,SACP,cAAC,GAAD,CAAc2F,KAAMyF,EAAQpL,QAAS4F,YAAawF,EAAQnL,OAE3DoL,EAAQrL,SACP,cAAC,GAAD,CACE2F,KAAM0F,EAAQrL,QACd4F,YAAayF,EAAQpL,a,UC7IhB0M,GAZD,SAACnO,GACb,IAAIF,EAAQ,GAQZ,OAFAG,OAAOC,OAAOJ,EAJG,SAACA,GAAD,mBAAC,eACbD,EAAcC,If2JS,SAACA,GAAD,mBAAC,eAZC,SAACA,GAAD,MAAY,CAC1CsO,WAAY,kBAAMtO,EAAMuO,SACxBC,WAAY,WAAmB,IAAlBD,EAAiB,uDAAP,GAErB,OADAvO,EAAMuO,QAAUA,EACTvO,GAETyO,IAAK,SAACC,GACJ,SAAI1O,EAAMuO,UAAWvO,EAAMuO,QAAQ9N,MAAK,SAACC,GAAD,OAAOA,IAAMgO,QAMpDC,CAAiB3O,IADQ,IAE5B4O,UAAW,WAIT,OAHA5O,EAAMV,KAAO,EACbU,EAAM6O,WAAY,EAClB7O,EAAMuO,QAAU,CAAC,QACVvO,GAET8O,QAAS,SAAC1N,GAER,OADApB,EAAMV,KAAO8B,EACNpB,GAET+O,UAAW,WAAgB,IAAfC,EAAc,uDAAT,IAGf,OAFIC,MAAMjP,EAAMV,QAAOU,EAAMV,KAAO,GACpCU,EAAMV,MAAQ0P,EACPhP,GAETkP,UAAW,WAAgB,IAAfF,EAAc,uDAAT,IAGf,OAFIhP,EAAMV,KAAO0P,GAAM,EAAGhP,EAAMV,MAAQ0P,EACnChP,EAAMV,KAAO,EACXU,GAETmP,KAAM,WAGJ,OAFAnP,EAAM6O,WAAY,EAClB7O,EAAMuO,QAAU,CAAC,QAAS,QACnBvO,GAEToP,OAAQ,WAIN,OAHApP,EAAMV,KAAO,EACbU,EAAM6O,WAAY,EAClB7O,EAAMuO,QAAU,CAAC,QAAS,QACnBvO,GAETqP,MAAO,WAGL,OAFArP,EAAM6O,WAAY,EAClB7O,EAAMuO,QAAU,CAAC,OAAQ,UAClBvO,GAETsP,KAAM,WAIJ,OAHAtP,EAAMV,KAAO,EACbU,EAAM6O,WAAY,EAClB7O,EAAMuO,QAAU,CAAC,QACVvO,KepMJuP,CAAevP,IAEC8E,CAAS9E,IAC1BE,GAAWF,EAAMC,cAAcC,GAC5BF,GCmBMwP,GA3BE,WAAO,IAAD,EACK7D,mBAAS0C,KAAQO,aADtB,mBACd5O,EADc,KACP4L,EADO,KAiBrB,OAPA6D,qBAAU,WACR,IAAMC,EAAQC,aAAY,WACpB3P,GAASA,EAAM6O,WALCjD,EAAS,eAAKyC,GAAMrO,GAAO+O,gBAM9C,KACH,OAAO,kBAAMa,cAAcF,MAC1B,CAAC1P,IAEG,CACL0P,MAAO1P,EACPmP,KAhBW,kBAAMvD,EAAS,eAAKyC,GAAMrO,GAAOmP,UAiB5CC,OAhBa,kBAAMxD,EAAS,eAAKyC,GAAMrO,GAAOoP,YAiB9CC,MAhBY,kBAAMzD,EAAS,eAAKyC,GAAMrO,GAAOqP,WAiB7CC,KAhBW,kBAAM1D,EAAS,eAAKyC,GAAMrO,GAAOsP,UAiB5CR,QAfc,SAAC1N,GAAD,OAAOwK,EAAS,eAAKyC,GAAMrO,GAAO8O,QAAQ1N,QnBYtDzD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GACN+R,KAAM,CACJrD,QAAS,OACTsD,cAAe,SACf9D,OAAQ,OACR+D,WAAY,UAEd5R,MAAO,CACL6R,WAAY,GACZC,cAAe,GACf7R,UAAW,SACX8R,UAAW,MACX,aAAc,UAEhBC,aAAc,CACZ3D,QAAS,OACTsD,cAAe,SACf/D,eAAgB,SAChBgE,WAAY,SACZK,aAAc,QAEhBC,YAAa,CACXrR,MAAOnB,EAAMyS,QAAQC,KAA4B,UAAvB1S,EAAMyS,QAAQvJ,KAAmB,IAAM,MAEnEyJ,UAAW,CACTC,UAAW,UAEbC,WAAY,CACVD,UAAW,WACXzR,MAAOnB,EAAMyS,QAAQC,KAA4B,UAAvB1S,EAAMyS,QAAQvJ,KAAmB,IAAM,MAEnE4J,SAAU,CACRF,UAAW,UAEbf,MAAO,CACLe,UAAW,WAEb3E,MAAO,CACL2E,UAAW,GACXzH,OAAQ,GACR2D,MAAO,MACPX,OAAQ,MACR,aAAc,UAEhBnI,KAAM,CACJkI,eAAgB,UAElBI,cAAe,CACbJ,eAAgB,YAElBK,cAAe,CACbC,WAAY,OACZC,YAAa,QAEfI,wBAAyB,CACvB9N,SAAU,WACV4N,QAAS,OACTT,eAAgB,SAChBY,MAAO,OACPC,OAAQ,IAEVC,eAAgB,CACdF,MAAO,MACPN,WAAY,GACZC,YAAa,IAEfhN,KAAM,CACJlB,UAAW,WA8JA6I,gBAJS,SAACjH,GAAD,MAAY,CAClCkH,SAAUb,GAASrG,EAAMmH,iBAGZF,EAlIS,SAAC1I,GACvB,IAAMG,EAAUf,KACRuJ,EAAuB3I,EAAvB2I,SAFyB,GAEF3I,EAAb6I,SACoCoI,MAA9CE,EAHyB,EAGzBA,MAAOP,EAHkB,EAGlBA,KAAMC,EAHY,EAGZA,OAAQC,EAHI,EAGJA,MAAOC,EAHH,EAGGA,KAAMR,EAHT,EAGSA,QACpC8B,EA5BS,SAACC,GAAS,IAAD,EACRlF,mBAAS,IAAImF,MAAMD,IAA5BE,EADiB,sBAEMpF,oBAAS,GAFf,mBAEjBqF,EAFiB,KAERC,EAFQ,KAmBxB,OAXAxB,qBAAU,WACRuB,EAAUD,EAAM5B,OAAS4B,EAAM1B,UAC9B,CAAC2B,IAEJvB,qBAAU,WAER,OADAsB,EAAMG,iBAAiB,SAAS,kBAAMD,GAAW,MAC1C,WACLF,EAAMI,oBAAoB,SAAS,kBAAMF,GAAW,SAErD,IAEI,CAAED,UAASI,OAfH,kBAAMH,GAAYD,IAeP7B,KAdb,kBAAM8B,GAAW,IAcE5B,MAblB,kBAAM4B,GAAW,KAsBlBI,CAASnG,GAAOH,WAEvBzL,EAAOoQ,EAAQA,EAAMpQ,KAAO,EAE9B4H,EAASrB,QAAQvG,KACnBsR,EAAKzB,OACLG,KAGF,IAAIgC,EAAYpK,EAAS9B,aAAa9F,GAStC,OAPIoQ,EAAMb,WAAa3H,EAASf,cAAc7G,IACxC5B,IAAc4T,IAChBV,EAAKzB,OACLzR,EAAY4T,GAKd,sBAAK3S,UAAWD,EAAQZ,KAAxB,UACE,cAAC,EAAD,CAAQK,MAAO+I,EAAS/I,MAAOK,UAAU,IAEzC,sBAAKG,UAAWD,EAAQmR,KAAxB,UACE,cAACzQ,EAAA,EAAD,CAAYT,UAAWD,EAAQP,MAAOkB,QAAQ,KAAKL,MAAM,YAAzD,SACGkI,EAAS/B,cAAc7F,GAAMnB,QAEhC,sBAAKQ,UAAWD,EAAQyR,aAAxB,UACE,cAACoB,GAAA,EAAD,CACElS,QAAQ,cACR8J,MAAO,IACPqI,KAAM,QACN7S,UAAWD,EAAQ2R,cAErB,cAACkB,GAAA,EAAD,CACElS,QAAQ,cACR8J,MAAmC,IAA5BjC,EAAStB,WAAWtG,GAC3BkS,KAAM,QACN7S,UAAWD,EAAQ8R,YAErB,cAACe,GAAA,EAAD,CACElS,QAAQ,cACR8J,MAAO,IACPqI,KAAM,QACN7S,UAAWD,EAAQgS,WACnB1R,MAAM,cAER,cAACuS,GAAA,EAAD,CACElS,QAAQ,cACR8J,MAAuC,IAAhCjC,EAASvB,eAAerG,GAC/BkS,KAAM,QACN7S,UAAWD,EAAQiS,SACnB3R,MAAM,cAER,eAACI,EAAA,EAAD,CAAYT,UAAWD,EAAQgR,MAAOrQ,QAAQ,KAAKL,MAAM,YAAzD,UACGkM,GAAON,mBACJ1D,EAAS1B,YAAYlG,GAAQ,IAC7B4H,EAASzB,qBAAqBnG,GAAQ,IAH5C,UAOF,cAAC0N,EAAA,EAAD,CAAO3N,QAAQ,WAAWV,UAAWD,EAAQoN,MAA7C,SACE,cAAC2B,EAAA,EAAD,CAAM9O,UAAWD,EAAQmF,KAAzB,SACGqD,EAASpB,kBAAkBxG,GAAMmE,KAAI,SAAChB,EAAM/B,GAC3C,OACE,eAAChB,EAAA,EAAD,CACEC,QAAM,EAENT,QAAS,kBAAM4P,EAAQ5H,EAASnB,iBAAiBtD,EAAK7B,MAHxD,UAKE,cAAChB,EAAA,EAAD,CAAcC,QAAS4C,EAAKtE,QAC5B,cAACyB,EAAA,EAAD,CACEC,QAAO,UAAK4C,EAAKV,SAAW,IAArB,KACPpD,UAAWD,EAAQY,SARvB,UAEUoB,WAalB,sBAAK/B,UAAWD,EAAQgO,wBAAxB,UACE,cAAC9C,EAAA,EAAD,CACEwE,UAAWsB,EAAMjB,IAAI,QACrBpP,QAAQ,YACRL,MAAM,UACNE,QAAS,kBAAMiQ,KACfxQ,UAAWD,EAAQmO,eALrB,kBASA,cAACjD,EAAA,EAAD,CACEwE,UAAWsB,EAAMjB,IAAI,SACrBpP,QAAQ,YACRL,MAAM,UACNE,QAAS,kBAAMmQ,KACf1Q,UAAWD,EAAQmO,eALrB,mBASA,cAACjD,EAAA,EAAD,CACEwE,UAAWsB,EAAMjB,IAAI,QACrBpP,QAAQ,YACRL,MAAM,UACNE,QAAS,kBAAMoQ,KACf3Q,UAAWD,EAAQmO,eALrB,kBASA,cAACjD,EAAA,EAAD,CACEwE,UAAWsB,EAAMjB,IAAI,UACrBpP,QAAQ,YACRL,MAAM,UACNE,QAAS,kBAAMkQ,KACfzQ,UAAWD,EAAQmO,eALrB,gCoBrNJlP,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,OAsEOmJ,gBAFS,SAACjH,GAAD,MAAY,KAErBiH,EAnES,SAAC1I,GACvB,IAAMG,EAAUf,KAERyJ,EAAgC7I,EAAhC6I,SAAUC,EAAsB9I,EAAtB8I,KAAMC,EAAgB/I,EAAhB+I,YAElBC,EAAmBC,IAAW,CAClCrJ,MAAOqJ,IACG,sCACPjD,IAAI,EAAG,0CACPkD,SAAS,uBAGRK,EAASC,YAAU,CACvBC,cAAe,CAAE7J,MAAO,IACxBoJ,iBAAkBA,EAClBU,SAAU,SAACC,GACT,IAAIC,EAAe9B,KACnB8B,EAAa7G,QAAQH,SAAS+G,EAAO/J,OAAOmE,cAAc,QAAS,IACnE8E,Eb3BG,CAAEL,KAAMN,GAAcK,Qa2BJqB,OAIzB,OACE,qBAAKxJ,UAAWD,EAAQZ,KAAxB,SACE,cAACyK,EAAA,EAAD,CACElB,KAAMA,EACNmB,QAASlB,EACTmB,kBAAgB,oBAChBC,WAAS,EAJX,SAME,uBAAMT,SAAUH,EAAOa,aAAvB,UACE,cAACC,EAAA,EAAD,CAAahI,GAAG,oBAAhB,iCACA,cAACiI,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPpI,GAAG,QACHqI,KAAK,QACLC,MAAM,wBACNnC,KAAK,OACL2B,WAAS,EACTS,MAAOrB,EAAOI,OAAO/J,MACrBiL,SAAUtB,EAAOuB,aACjBC,MAAOxB,EAAOyB,QAAQpL,OAASqL,QAAQ1B,EAAO2B,OAAOtL,OACrDuL,WAAY5B,EAAOyB,QAAQpL,OAAS2J,EAAO2B,OAAOtL,UAGtD,cAACwL,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEvK,QAAQ,WACRL,MAAM,YAEN6K,UAAW,cAAC,IAAD,IACXnB,WAAS,EACT3B,KAAK,SANP,wDCjDNpJ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,OA0EOmJ,gBAJS,SAACjH,GAAD,MAAY,CAClCkH,SAAUlH,EAAMmH,gBAGHF,EAvES,SAAC1I,GACvB,IAAMG,EAAUf,KAERyJ,EAA0C7I,EAA1C6I,SAAUF,EAAgC3I,EAAhC2I,SAAUG,EAAsB9I,EAAtB8I,KAAMC,EAAgB/I,EAAhB+I,YAE5BC,EAAmBC,IAAW,CAClCrJ,MAAOqJ,IACG,sCACPjD,IAAI,EAAG,0CACPkD,SAAS,uBAGRK,EAASC,YAAU,CACvBC,cAAe,CAAE7J,MAAO+I,EAAS/I,MAAQ+I,EAAS/I,MAAQ,IAC1DoJ,iBAAkBA,EAClBU,SAAU,SAACC,GACT,IAAIC,EAAe9B,GAASa,GAC5BiB,EAAahH,SAAS+G,EAAO/J,OAC7BiJ,EAASP,GAAYsB,OAIzB,OACE,qBAAKxJ,UAAWD,EAAQZ,KAAxB,SACE,cAACyK,EAAA,EAAD,CACElB,KAAMA,EACNmB,QAASlB,EACTmB,kBAAgB,oBAChBC,WAAS,EAJX,SAME,uBAAMT,SAAUH,EAAOa,aAAvB,UACE,cAACC,EAAA,EAAD,CAAahI,GAAG,oBAAhB,qCAGA,cAACiI,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPpI,GAAG,QACHqI,KAAK,QACLC,MAAM,wBACNnC,KAAK,OACL2B,WAAS,EACTS,MAAOrB,EAAOI,OAAO/J,MACrBiL,SAAUtB,EAAOuB,aACjBC,MAAOxB,EAAOyB,QAAQpL,OAASqL,QAAQ1B,EAAO2B,OAAOtL,OACrDuL,WAAY5B,EAAOyB,QAAQpL,OAAS2J,EAAO2B,OAAOtL,UAGtD,cAACwL,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEvK,QAAQ,WACRL,MAAM,YAEN6K,UAAW,cAAC,IAAD,IACXnB,WAAS,EACT3B,KAAK,SANP,iD,qBCzCNpJ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GACNgO,MAAO,CACL9C,OAAQ,IAEVnF,KAAM,CACJkI,eAAgB,UAElBK,cAAe,GACfG,uBAAwB,CACtBC,QAAS,OACTT,eAAgB,SAChBU,QAAS,OAoHExF,gBALS,SAACjH,GAAD,MAAY,CAClCyR,aAAcrL,GAAapG,EAAMyR,cACjCtK,aAAcd,GAASrG,EAAMmH,iBAGhBF,EAhHU,SAAC1I,GACxB,IAAMG,EAAUf,KACR8T,EAAyClT,EAAzCkT,aAAcrK,EAA2B7I,EAA3B6I,SAChB0F,GAD2CvO,EAAjB4I,aAChBsE,MACVsB,EAAUtB,KACVhN,EAAUiT,cAiBhB,OACE,sBAAK/S,UAAWD,EAAQZ,KAAxB,UACE,cAAC,EAAD,CAAQK,MAAM,aACd,eAAC6O,EAAA,EAAD,CAAO3N,QAAQ,WAAWV,UAAWD,EAAQoN,MAA7C,UACE,cAAC,KAAD,CAAiBmB,UAbL,SAACjJ,GACjB,GAAKA,EAAOkJ,YAAZ,CACA,IfxD4BpG,EewDtBqG,EAAWnJ,EAAOoJ,OAAOvK,MACzBwK,EAAYrJ,EAAOkJ,YAAYrK,MACjC8O,EAAmBvL,GAAaqL,GACpCE,EAAiBvN,QAAQ,OAAQ+I,EAAUE,GAC3CjG,Gf5D4BN,Ee4DH6K,EAAiB9N,Kf3DrC,CAAEkD,KAAMP,GAAmBM,eekE5B,SACE,cAAC,KAAD,CAAWwG,YAAa,eAAxB,SACG,SAACC,EAAUC,GAAX,OACC,eAACC,EAAA,EAAD,yBACE9O,UAAWD,EAAQmF,MACf0J,EAASG,gBAFf,IAGEC,IAAKJ,EAASK,SAHhB,UAKG6D,EAAa5N,KAAKJ,KAAI,SAAChB,EAAM/B,GAC5B,IAAImN,EAAaxH,GAAS5D,GACpBmP,EAAqB,WACzBxK,EAASJ,GAAgB6G,IACzBpP,EAAQoT,KAAK,cAETC,EAAe,WACnB1K,EAASJ,GAAgB6G,IACzBd,EAAQnL,QAEJnC,EAAW,WACf2H,Ef5EX,CAAEL,KAAMJ,GAAcG,Qe4EU+G,KAEvB,OACE,cAAC,KAAD,CAAyBC,YAAarL,EAAK7B,GAAIiC,MAAOnC,EAAtD,SACG,SAAC6M,EAAUC,GAAX,OACC,yDACEG,IAAKJ,EAASK,UACVL,EAASQ,gBACTR,EAASS,iBAHf,IAIEC,MAAOV,EAASQ,eAAeE,MAJjC,SAME,eAACvO,EAAA,EAAD,CAAUC,QAAM,EAACT,QAAS0S,EAA1B,UACE,cAAChS,EAAA,EAAD,CAAcC,QAAS4C,EAAKtE,QAC5B,eAAC2B,EAAA,EAAD,WACE,cAAChB,EAAA,EAAD,CACEC,KAAK,MACLE,aAAW,WACXC,QAASO,EAHX,SAKE,cAAC,IAAD,MAEF,cAACX,EAAA,EAAD,CACEC,KAAK,MACLE,aAAW,WACXC,QAAS4S,EAHX,SAKE,cAAC,KAAD,WAf6CpR,QARzC+B,EAAK7B,OAgCxB2M,EAASW,qBAKlB,qBAAKvP,UAAWD,EAAQ6N,uBAAxB,SACE,cAAC3C,EAAA,EAAD,CACEvK,QAAQ,WACRL,MAAM,YACNE,QAAS4N,EAAQlL,KACjBiI,UAAW,cAAC,IAAD,IACXlL,UAAWD,EAAQ0N,cALrB,0BAWHU,EAAQpL,SACP,cAAC,GAAD,CAAiB2F,KAAMyF,EAAQpL,QAAS4F,YAAawF,EAAQnL,OAE9DoL,EAAQrL,SACP,cAAC,GAAD,CAAiB2F,KAAM0F,EAAQrL,QAAS4F,YAAayF,EAAQpL,aC/ItD,SAASoQ,KACtB,IAAMC,EAAS9G,GAAOb,YAAc4H,IAAaC,IAC3CC,EAAWjH,GAAOb,YAAc,WAAa,IAEnD,OACE,cAAC2H,EAAD,CAAQG,SAAUA,EAAlB,SAGE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAACC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,gBAAZ,SACE,cAAC,GAAD,W,oBCpBJ3G,GAAe,WACnB,OAAOrF,KAAW/E,MAAM,WAAWgB,cAAc,QAAS,KCDtDoJ,GAAe,WACnB,OAAO3G,IAAezD,QAAQH,SAAS,cAAca,YAAY,KCK7D0J,GAAe,kBAAMtF,GAAa,CAAEvC,KAAM,KAAMvC,SCJhDiR,GAAeC,aAAgB,CACnCf,aDK0B,WAAqC,IAApCzR,EAAmC,uDAA3B0L,KAAgBgD,EAAW,uCAC9D,OAAQA,EAAO3H,MACb,KAAKP,GACH,IAAMiM,EAAS,2BAAQzS,GAAR,IAAe6D,KAAK,YAAK6K,EAAO5H,WAC/C,OAAO2L,EAET,KAAKhM,GACH,IAAMiM,EAAQ,sBAAO1S,EAAM6D,MAAb,CAAmB6K,EAAO5H,UAClC2L,EAAS,2BAAQzS,GAAR,IAAe6D,KAAM6O,IACpC,OAAOD,EAET,KAAK/L,GACH,IAAMyB,EAAY,eAAQuG,EAAO5H,SAC3B4L,EAAW1S,EAAM6D,KAAKJ,KAAI,SAAC/C,GAC/B,IAAMiS,EAAQtM,GAAS3F,GACvB,OAAOiS,EAAM9R,UAAYsH,EAAatH,QAAUsH,EAAewK,KAE3DF,EAAS,2BAAQzS,GAAR,IAAe6D,KAAM6O,IACpC,OAAOD,EAET,KAAK9L,GACH,IAAMwB,EAAY,eAAQuG,EAAO5H,SAC3B4L,EAAW1S,EAAM6D,KAAKT,QAAO,SAAC1C,GAElC,OADc2F,GAAS3F,GACVG,UAAYsH,EAAatH,WAElC4R,EAAS,2BAAQzS,GAAR,IAAe6D,KAAM6O,IACpC,OAAOD,EAET,KAAK7L,GAAgB,IAAD,EACS8H,EAAO5H,QAA1B8L,EADU,EACVA,OAAQC,EADE,EACFA,OAEZH,EAAQ,YAAO1S,EAAM6D,MACnBiP,EAAMJ,EAASE,GACrBF,EAASE,GAAUF,EAASG,GAC5BH,EAASG,GAAUC,EACnB,IAAML,EAAS,2BAAQzS,GAAR,IAAe6D,KAAM6O,IACpC,OAAOD,EAET,QACE,OAAOzS,IC5CXmH,aHA0B,WAAqC,IAApCnH,EAAmC,uDAA3B0L,KAAgBgD,EAAW,uCAC9D,OAAQA,EAAO3H,MACb,KAAKR,GACH,IAAMkM,EAAS,eAAQ/D,EAAO5H,SAC9B,OAAO2L,EAET,QACE,OAAOzS,IGNXuL,iBFD8B,WAAqC,IAApCvL,EAAmC,uDAA3B0L,KAAgBgD,EAAW,uCAClE,OAAQA,EAAO3H,MACb,KAAKT,GACH,IAAMmM,EAAS,eAAQ/D,EAAO5H,SAC9B,OAAO2L,EAET,QACE,OAAOzS,MEsBb,IAAM+S,GAAQC,aAAYT,GAb1B,WACE,IACE,IAAMU,EAAkBC,aAAaC,QAAQ,mBAC7C,GAAwB,OAApBF,EAA0B,OAC9B,OAAOG,KAAKC,MAAMJ,GAClB,MAAOK,GAEP,YADAC,QAAQC,KAAKF,IAOuBG,IAIxCV,GAAMW,WAAU,kBA5BhB,SAA4B1T,GAC1B,IACE,IAAMiT,EAAkBG,KAAKO,UAAU3T,GACvCkT,aAAaU,QAAQ,kBAAmBX,GACxC,MAAOK,GACPC,QAAQC,KAAKF,IAuBKO,CAAmBd,GAAMe,eCxBhCC,OAVf,WACE,OACE,cAAC,IAAD,CAAUhB,MAAOA,GAAjB,SACE,qBAAKnS,GAAG,MAAR,SACE,cAACmR,GAAD,SCEOiC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAEP,cAAC,GAAD,IAEAC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.1a826a5a.chunk.js","sourcesContent":["import React, { Dimensions, useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  ListItemSecondaryAction,\r\n  Paper,\r\n  CircularProgress,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport AppBar from \"../../components/AppBar/AppBar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { connect } from \"react-redux\";\r\nimport Training from \"../../models/Training\";\r\nimport Timer from \"../../models/Timer\";\r\nimport { setCurrTraining } from \"../../redux/actions/currTrainingAction\";\r\nimport useTimer from \"../../hooks/useTimer\";\r\nimport { config } from \"../../services/services\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  body: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100%\",\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    paddingTop: 50,\r\n    paddingBottom: 50,\r\n    textAlign: \"center\",\r\n    maxHeight: \"10%\",\r\n    \"overflow-y\": \"scroll\",\r\n  },\r\n  progressArea: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginBottom: \"6rem\",\r\n  },\r\n  circleOutBg: {\r\n    color: theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\r\n  },\r\n  circleOut: {\r\n    marginTop: \"-16rem\",\r\n  },\r\n  circleInBg: {\r\n    marginTop: \"-14.5rem\",\r\n    color: theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\r\n  },\r\n  circleIn: {\r\n    marginTop: \"-13rem\",\r\n  },\r\n  timer: {\r\n    marginTop: \"-8.5rem\",\r\n  },\r\n  paper: {\r\n    marginTop: 30,\r\n    margin: 10,\r\n    width: \"90%\",\r\n    height: \"20%\",\r\n    \"overflow-y\": \"scroll\",\r\n  },\r\n  list: {\r\n    justifyContent: \"center\",\r\n  },\r\n  iconContainer: {\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  endListButton: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  trainingButtonContainer: {\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    bottom: 10,\r\n  },\r\n  trainingButton: {\r\n    width: \"90%\",\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  },\r\n  time: {\r\n    textAlign: \"end\",\r\n  },\r\n}));\r\n\r\nconst useAudio = (url) => {\r\n  const [audio] = useState(new Audio(url));\r\n  const [playing, setPlaying] = useState(false);\r\n\r\n  const toggle = () => setPlaying(!playing);\r\n  const play = () => setPlaying(true);\r\n  const pause = () => setPlaying(false);\r\n\r\n  useEffect(() => {\r\n    playing ? audio.play() : audio.pause();\r\n  }, [playing]);\r\n\r\n  useEffect(() => {\r\n    audio.addEventListener(\"ended\", () => setPlaying(false));\r\n    return () => {\r\n      audio.removeEventListener(\"ended\", () => setPlaying(false));\r\n    };\r\n  }, []);\r\n\r\n  return { playing, toggle, play, pause };\r\n};\r\n\r\nlet beepIndex;\r\n\r\nconst TrainingRunPage = (props) => {\r\n  const classes = useStyles();\r\n  const { training, dispatch } = props;\r\n  const { timer, play, replay, pause, stop, setTime } = useTimer();\r\n  const beep = useAudio(config.timerBeep);\r\n\r\n  const time = timer ? timer.time : 0;\r\n\r\n  if (training.isEnded(time)) {\r\n    beep.play();\r\n    stop();\r\n  }\r\n\r\n  let stepIndex = training.getStepIndex(time);\r\n\r\n  if (timer.isRunning && training.isStepStarted(time)) {\r\n    if (beepIndex !== stepIndex) {\r\n      beep.play();\r\n      beepIndex = stepIndex;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar title={training.title} backIcon={true} />\r\n\r\n      <div className={classes.body}>\r\n        <Typography className={classes.title} variant=\"h3\" color=\"secondary\">\r\n          {training.getStepByTime(time).title}\r\n        </Typography>\r\n        <div className={classes.progressArea}>\r\n          <CircularProgress\r\n            variant=\"determinate\"\r\n            value={100}\r\n            size={\"16rem\"}\r\n            className={classes.circleOutBg}\r\n          />\r\n          <CircularProgress\r\n            variant=\"determinate\"\r\n            value={training.getPercent(time) * 100}\r\n            size={\"16rem\"}\r\n            className={classes.circleOut}\r\n          />\r\n          <CircularProgress\r\n            variant=\"determinate\"\r\n            value={100}\r\n            size={\"13rem\"}\r\n            className={classes.circleInBg}\r\n            color=\"secondary\"\r\n          />\r\n          <CircularProgress\r\n            variant=\"determinate\"\r\n            value={training.getStepPercent(time) * 100}\r\n            size={\"13rem\"}\r\n            className={classes.circleIn}\r\n            color=\"secondary\"\r\n          />\r\n          <Typography className={classes.timer} variant=\"h2\" color=\"secondary\">\r\n            {config.isTimerIncrement()\r\n              ? training.getStepTime(time) / 1000\r\n              : training.getStepTimeDecrement(time) / 1000}\r\n            s\r\n          </Typography>\r\n        </div>\r\n        <Paper variant=\"outlined\" className={classes.paper}>\r\n          <List className={classes.list}>\r\n            {training.getRemainingSteps(time).map((item, i) => {\r\n              return (\r\n                <ListItem\r\n                  button\r\n                  key={`${i}`}\r\n                  onClick={() => setTime(training.getStepStartTime(item.id))}\r\n                >\r\n                  <ListItemText primary={item.title} />\r\n                  <ListItemText\r\n                    primary={`${item.duration / 1000}s`}\r\n                    className={classes.time}\r\n                  />\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </Paper>\r\n        <div className={classes.trainingButtonContainer}>\r\n          <Button\r\n            disabled={!timer.can(\"play\")}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => play()}\r\n            className={classes.trainingButton}\r\n          >\r\n            Play\r\n          </Button>\r\n          <Button\r\n            disabled={!timer.can(\"pause\")}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => pause()}\r\n            className={classes.trainingButton}\r\n          >\r\n            Pause\r\n          </Button>\r\n          <Button\r\n            disabled={!timer.can(\"stop\")}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => stop()}\r\n            className={classes.trainingButton}\r\n          >\r\n            Stop\r\n          </Button>\r\n          <Button\r\n            disabled={!timer.can(\"replay\")}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => replay()}\r\n            className={classes.trainingButton}\r\n          >\r\n            Replay\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MapStateToProps = (state) => ({\r\n  training: Training(state.currTraining),\r\n});\r\n\r\nexport default connect(MapStateToProps)(TrainingRunPage);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MUIAppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import Button from \"@material-ui/core/Button\";\r\n// import IconButton from \"@material-ui/core/IconButton\";\r\n// import MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    // marginRight: theme.spacing(2),\r\n  },\r\n  leftButtonContainer: {\r\n    flex: 1,\r\n    // backgroundColor: \"blue\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\",\r\n    // backgroundColor: \"red\",\r\n  },\r\n  right: {\r\n    // marginLeft: theme.spacing(2),\r\n    // backgroundColor: \"green\",\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst AppBar = (props) => {\r\n  const { title, backIcon, history } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MUIAppBar position=\"static\">\r\n        <Toolbar>\r\n          {backIcon && (\r\n            <div className={classes.leftButtonContainer}>\r\n              <IconButton\r\n                edge=\"start\"\r\n                className={classes.menuButton}\r\n                color=\"inherit\"\r\n                aria-label=\"back\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <ChevronLeftIcon />\r\n              </IconButton>\r\n            </div>\r\n          )}\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {title}\r\n          </Typography>\r\n          {backIcon && <Typography className={classes.title}> </Typography>}\r\n        </Toolbar>\r\n      </MUIAppBar>\r\n    </div>\r\n  );\r\n};\r\nexport default withRouter(AppBar);\r\n","import React from \"react\";\r\nimport { IconButton, ListItemSecondaryAction } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  time: { textAlign: \"end\" },\r\n}));\r\n\r\nconst Item = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { title, time, onPress = () => {}, onDelete = () => {} } = props;\r\n\r\n  return (\r\n    <ListItem button onClick={onPress}>\r\n      <ListItemText primary={title} />\r\n      <ListItemText className={classes.time} primary={`${time / 1000}s`} />\r\n      <ListItemSecondaryAction>\r\n        <IconButton edge=\"end\" aria-label=\"comments\" onClick={onDelete}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const canHandleInit = (state) => ({\r\n  fromLastState: (lastState) => {\r\n    Object.assign(state, lastState);\r\n    return state;\r\n  },\r\n  re: (lastState) => {\r\n    Object.assign(state, lastState);\r\n    return state;\r\n  },\r\n  fromCollection: (collection, test) => {\r\n    return state.re(collection.find((i) => test(state.re(i))));\r\n  },\r\n  fromCollectionById: (collection, id) => {\r\n    const test = (state) => state.getId() === id;\r\n    return state.fromCollection(collection, test);\r\n  },\r\n  fromCollectionByKey: (collection, key) => {\r\n    const test = (state) => state.getKey() === key;\r\n    return state.fromCollection(collection, test);\r\n  },\r\n});\r\n\r\nexport const canHandleTitle = (state) => ({\r\n  getTitle: () => state.title,\r\n  setTitle: (v) => {\r\n    state.title = v;\r\n    return state;\r\n  },\r\n});\r\n\r\nexport const canHandleId = (state) => ({\r\n  getId: () => state.id,\r\n  setId: (v = uuidv4()) => {\r\n    state.id = v;\r\n    return state;\r\n  },\r\n});\r\n\r\nexport const canHandleVisibility = (state) => ({\r\n  setVisible: (v) => {\r\n    state.visible = v;\r\n    return state;\r\n  },\r\n  hide: () => state.setVisible(false),\r\n  show: () => state.setVisible(true),\r\n});\r\n\r\nexport const canHandleDuration = (state) => ({\r\n  getDuration: () => state.duration,\r\n  setDuration: (v) => {\r\n    state.duration = v;\r\n    return state;\r\n  },\r\n});\r\n\r\nexport const canHandleCollection = (state) => ({\r\n  getCollection: (collection) => state[collection],\r\n  getFirst: (collection) => {\r\n    return state[collection].length >= 1 ? state[collection][0] : null;\r\n  },\r\n  getLast: (collection) => {\r\n    const length = state[collection].length;\r\n    return length >= 1 ? state[collection][length - 1] : null;\r\n  },\r\n  setCollection: (collection, items) => {\r\n    state[collection] = items;\r\n    return state;\r\n  },\r\n  getItemById: (collection, id) => {\r\n    for (const item of state[collection]) if (item.getId() === id) return item;\r\n  },\r\n  getItemByKey: (collection, key) => {\r\n    for (const item of state[collection]) {\r\n      if (item.getKey() === key) return item;\r\n    }\r\n  },\r\n  getItemIndexById: (collection, id) => {\r\n    for (const index of state[collection].keys()) {\r\n      if (state[collection][index].getId() === id) return index;\r\n    }\r\n  },\r\n  addItem: (collection, item) => {\r\n    if (state[collection]) {\r\n      state[collection] = [...state[collection], item];\r\n    } else state[collection] = [item];\r\n    return state;\r\n  },\r\n  addItemStart: (collection, item) => {\r\n    state[collection] = [item, ...state[collection]];\r\n    return state;\r\n  },\r\n  addItemAfterAnother: (collection, item, another) => {\r\n    const index = state.getItemIndexById(collection, another.id);\r\n    state[collection].splice(index + 1, 0, item);\r\n    return state;\r\n  },\r\n  delItemById: (collection, id) => {\r\n    state[collection] = state[collection].filter((item) => item.getId() !== id);\r\n    return state;\r\n  },\r\n  delItemByIndex: (collection, index) => {\r\n    state[collection] = state[collection].filter((item, i) => i !== index);\r\n    return state;\r\n  },\r\n  delItemByKey: (collection, key) => {\r\n    state[collection] = state[collection].filter(\r\n      (item) => item.getKey() !== key\r\n    );\r\n    return state;\r\n  },\r\n  modItemById: (collection, nextItem) => {\r\n    state[collection] = state[collection].map((item) => {\r\n      if (item.id === nextItem.id) return nextItem;\r\n      else return item;\r\n    });\r\n    return state;\r\n  },\r\n  modItemByIndex: (collection, nextItem, index) => {\r\n    state[collection] = state[collection].map((item, i) => {\r\n      if (i === index) return nextItem;\r\n      else return item;\r\n    });\r\n    return state;\r\n  },\r\n  modItemByKey: (collection, nextItem) => {\r\n    state[collection] = state[collection].map((item) => {\r\n      if (item.getKey() === nextItem.getKey()) return nextItem;\r\n      else return item;\r\n    });\r\n    return state;\r\n  },\r\n  justReorder: (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n  },\r\n  reorder: (collection, startIndex, endIndex) => {\r\n    state[collection] = state.justReorder(\r\n      state[collection],\r\n      startIndex,\r\n      endIndex\r\n    );\r\n    return state;\r\n  },\r\n});\r\n\r\nexport const canHandleActions = (state) => ({\r\n  getActions: () => state.actions,\r\n  setActions: (actions = []) => {\r\n    state.actions = actions;\r\n    return state;\r\n  },\r\n  can: (action) => {\r\n    if (state.actions && state.actions.find((i) => i === action)) return true;\r\n    else return false;\r\n  },\r\n});\r\n\r\nexport const canHandleTimer = (state) => ({\r\n  ...canHandleActions(state),\r\n  initTimer: () => {\r\n    state.time = 0;\r\n    state.isRunning = false;\r\n    state.actions = [\"play\"];\r\n    return state;\r\n  },\r\n  setTime: (v) => {\r\n    state.time = v;\r\n    return state;\r\n  },\r\n  increment: (ms = 1000) => {\r\n    if (isNaN(state.time)) state.time = 0;\r\n    state.time += ms;\r\n    return state;\r\n  },\r\n  decrement: (ms = 1000) => {\r\n    if (state.time - ms >= 0) state.time -= ms;\r\n    else state.time = 0;\r\n    return state;\r\n  },\r\n  play: () => {\r\n    state.isRunning = true;\r\n    state.actions = [\"pause\", \"stop\"];\r\n    return state;\r\n  },\r\n  replay: () => {\r\n    state.time = 0;\r\n    state.isRunning = true;\r\n    state.actions = [\"pause\", \"stop\"];\r\n    return state;\r\n  },\r\n  pause: () => {\r\n    state.isRunning = false;\r\n    state.actions = [\"play\", \"replay\"];\r\n    return state;\r\n  },\r\n  stop: () => {\r\n    state.time = 0;\r\n    state.isRunning = false;\r\n    state.actions = [\"play\"];\r\n    return state;\r\n  },\r\n});\r\n","const Maths = () => {\r\n  let state = {};\r\n\r\n  const behavior = (state) => ({\r\n    ...canHandleRange(state),\r\n  });\r\n  Object.assign(state, behavior(state));\r\n  return state;\r\n};\r\n\r\nconst canHandleRange = (state) => ({\r\n  belongRange: (min, max, n) => min <= n && n <= max, // [min - max]\r\n  belongRangeMax: (min, max, n) => min < n && n <= max, // ]min - max]\r\n  belongRangeMin: (min, max, n) => min <= n && n < max, // [min - max[\r\n  outRange: (min, max, n) => n <= min && max <= n,\r\n});\r\n\r\nexport default Maths();\r\n","import {\r\n  canHandleId,\r\n  canHandleTitle,\r\n  canHandleCollection,\r\n  canHandleInit,\r\n  canHandleDuration,\r\n  canHandleVisibility,\r\n} from \"./handlers/handlers\";\r\nimport maths from \"../models/Maths\";\r\n\r\nconst TrainingStep = (lastState = {}) => {\r\n  let state = { ...lastState };\r\n\r\n  const behavior = (state) => ({\r\n    ...canHandleId(state),\r\n    ...canHandleTitle(state),\r\n    ...canHandleDuration(state),\r\n    ...canHandleVisibility(state),\r\n    ...canHandleInit(state),\r\n  });\r\n  Object.assign(state, behavior(state));\r\n  return state;\r\n};\r\n\r\nconst canHandleTrainingSteps = (state) => ({\r\n  getStepByTimeWithRange: (time) => {\r\n    let min = 0;\r\n    let max = 0;\r\n    let index = 0;\r\n    let item = state.items.find((item) => {\r\n      min = max;\r\n      max += item.duration;\r\n      index++;\r\n      return maths.belongRangeMin(min, max, time);\r\n    });\r\n    if (!item) item = state.items[state.items.length - 1];\r\n    return { item, min, max, index };\r\n  },\r\n  getStepByTime: (time) => state.getStepByTimeWithRange(time).item,\r\n  getStepIndex: (time) => state.getStepByTimeWithRange(time).index,\r\n  getStepInstant: (time) => {\r\n    const { item, min } = state.getStepByTimeWithRange(time);\r\n    const stepTime = min ? time - min : time;\r\n    const percent = item ? stepTime / item.duration : 0;\r\n    return { item, time: stepTime, percent };\r\n  },\r\n  getStepTime: (time) => state.getStepInstant(time).time,\r\n  getStepTimeDecrement: (timerTime) => {\r\n    const { item, time } = state.getStepInstant(timerTime);\r\n    const decrement = item.duration - time;\r\n    return decrement;\r\n  },\r\n  getStepPercent: (time) => state.getStepInstant(time).percent,\r\n  getDuration: () => {\r\n    let duration = 0;\r\n    state.items.map((item) => (duration += item.duration));\r\n    return duration;\r\n  },\r\n  getPercent: (time) => time / state.getDuration(),\r\n  isEnded: (time) => time >= state.getDuration(),\r\n  getRemainingSteps: (time) => {\r\n    const index = state.getStepByTimeWithRange(time).index;\r\n    const remainings = state.items.filter((item, i) => i >= index);\r\n    return remainings;\r\n  },\r\n  getStepStartTime: (id) => {\r\n    let start = 0;\r\n    for (const item of state.items) {\r\n      if (item.id === id) break;\r\n      start += item.duration;\r\n    }\r\n    return start;\r\n  },\r\n  isStepEnded: (time) => {\r\n    const step = state.getStepInstant(time);\r\n    return step.time === step.item.duration;\r\n  },\r\n  isStepStarted: (time) => {\r\n    const step = state.getStepInstant(time);\r\n    return step.time === 0;\r\n  },\r\n});\r\n\r\nconst Training = (lastState = {}) => {\r\n  let state = { ...lastState };\r\n\r\n  const behavior = (state) => ({\r\n    ...canHandleId(state),\r\n    ...canHandleTitle(state),\r\n    ...canHandleCollection(state),\r\n    ...canHandleTrainingSteps(state),\r\n    ...canHandleInit(state),\r\n  });\r\n  Object.assign(state, behavior(state));\r\n  return state;\r\n};\r\n\r\nconst TrainingList = (lastState = {}) => {\r\n  let state = { ...lastState };\r\n\r\n  const behavior = (state) => ({\r\n    ...canHandleId(state),\r\n    ...canHandleCollection(state),\r\n  });\r\n  Object.assign(state, behavior(state));\r\n  return state;\r\n};\r\n\r\nexport { Training, TrainingStep, TrainingList };\r\nexport default Training;\r\n","export const CURR_TRAINING_STEP_SET = \"CURR_TRAINING_STEP_SET\";\r\nexport const CURR_TRAINING_SET = \"CURR_TRAINING_SET\";\r\nexport const TRAINING_LIST_SET = \"TRAINING_LIST_SET\";\r\nexport const TRAINING_ADD = \"TRAINING_ADD\";\r\nexport const TRAINING_MOD = \"TRAINING_MOD\";\r\nexport const TRAINING_DEL = \"TRAINING_DEL\";\r\nexport const TRAINING_MOVE = \"TRAINING_MOVE\";\r\n","import {\r\n  TRAINING_LIST_SET,\r\n  TRAINING_ADD,\r\n  TRAINING_MOD,\r\n  TRAINING_DEL,\r\n  TRAINING_MOVE,\r\n} from \"../constants\";\r\n\r\nexport const setTrainingList = (payload) => {\r\n  return { type: TRAINING_LIST_SET, payload };\r\n};\r\nexport const addTraining = (payload) => {\r\n  return { type: TRAINING_ADD, payload };\r\n};\r\nexport const modTraining = (payload) => {\r\n  return { type: TRAINING_MOD, payload };\r\n};\r\nexport const delTraining = (payload) => {\r\n  return { type: TRAINING_DEL, payload };\r\n};\r\nexport const moveTraining = (payload) => {\r\n  return { type: TRAINING_MOVE, payload };\r\n};\r\n","import { CURR_TRAINING_SET } from \"../constants\";\r\n\r\nexport const setCurrTraining = (payload) => {\r\n  return { type: CURR_TRAINING_SET, payload };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Training, { TrainingStep } from \"../../../models/Training\";\r\nimport { modTraining } from \"../../../redux/actions/trainingListAction\";\r\nimport { setCurrTraining } from \"../../../redux/actions/currTrainingAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n}));\r\n\r\nconst ExerciseForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { dispatch, training, open, handleClose } = props;\r\n\r\n  const validationSchema = yup.object({\r\n    title: yup\r\n      .string(\"Entrer le nom de l'exercice\")\r\n      .min(3, \"Le nom doit faire minimum 3 caracteres\")\r\n      .required(\"Le nom est requis\"),\r\n    duration: yup\r\n      .number(\"Entrer le nombre de secondes\")\r\n      .required(\"requis\")\r\n      .positive(\"superieur ou egal a 0\")\r\n      .integer(\"nombre entier\")\r\n      .default(30),\r\n    reposDuration: yup\r\n      .number(\"Entrer le nombre de secondes\")\r\n      .required(\"requis\")\r\n      .min(0, \"minimum 0\")\r\n      .integer(\"nombre entier\")\r\n      .default(30),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: { title: \"\" },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      let nextTraining = Training(training);\r\n      const nextDuration = values.duration * 1000;\r\n      const nextReposDuration = values.reposDuration * 1000;\r\n      let item = TrainingStep().setId(nextTraining.items.length);\r\n      item.setTitle(values.title).setDuration(nextDuration).show();\r\n      nextTraining.addItem(\"items\", item);\r\n      if (values.reposDuration && values.reposDuration !== \"0\") {\r\n        let repos = TrainingStep().setId(nextTraining.items.length);\r\n        repos.setTitle(\"Repos\").setDuration(nextReposDuration).hide();\r\n        nextTraining.addItem(\"items\", repos);\r\n      }\r\n      dispatch(setCurrTraining(nextTraining));\r\n      dispatch(modTraining(nextTraining));\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        fullWidth\r\n      >\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <DialogTitle id=\"form-dialog-title\">Nouvel exercice</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              label=\"Nom de l'exercice\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={formik.values.title}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.title && Boolean(formik.errors.title)}\r\n              helperText={formik.touched.title && formik.errors.title}\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"duration\"\r\n              name=\"duration\"\r\n              label=\"Duree de l'exercice\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={formik.values.duration}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.duration && Boolean(formik.errors.duration)}\r\n              helperText={formik.touched.duration && formik.errors.duration}\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"reposDuration\"\r\n              name=\"reposDuration\"\r\n              label=\"Duree du repos apres l'exercice\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={formik.values.reposDuration}\r\n              onChange={formik.handleChange}\r\n              error={\r\n                formik.touched.reposDuration &&\r\n                Boolean(formik.errors.reposDuration)\r\n              }\r\n              helperText={\r\n                formik.touched.reposDuration && formik.errors.reposDuration\r\n              }\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              //   onClick={handleClose}\r\n              startIcon={<AddIcon />}\r\n              fullWidth\r\n              type=\"submit\"\r\n            >\r\n              Ajouter l'exercice\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MapStateToProps = (state) => ({\r\n  training: state.currTraining,\r\n});\r\n\r\nexport default connect(MapStateToProps)(ExerciseForm);\r\n","export const ENV_DEV = \"ENV_DEV\";\r\nexport const ENV_PROD = \"ENV_PROD\";\r\nexport const TIMER_INCREMENT = \"INCREMENT\";\r\nexport const TIMER_DECREMENT = \"DECREMENT\";\r\n","import {\r\n  ENV_DEV,\r\n  ENV_PROD,\r\n  TIMER_INCREMENT,\r\n  TIMER_DECREMENT,\r\n} from \"../constants/constants\";\r\n\r\nconst Config = (lastState = {}) => {\r\n  let state = {\r\n    env: ENV_DEV,\r\n    timeDirection: TIMER_DECREMENT,\r\n    timerBeep: \"https://lasonotheque.org/UPLOAD/mp3/2061.mp3\",\r\n    ...lastState,\r\n  };\r\n\r\n  const behavior = (state) => ({\r\n    ...canHandleConfig(state),\r\n  });\r\n  Object.assign(state, behavior(state));\r\n  return state;\r\n};\r\n\r\nexport const canHandleConfig = (state) => ({\r\n  isDevEnv: () => state.env === ENV_DEV,\r\n  isProdEnv: () => state.env === ENV_PROD,\r\n  setDevEnv: () => {\r\n    state.env = ENV_DEV;\r\n    return state;\r\n  },\r\n  setProdEnv: () => {\r\n    state.env = ENV_PROD;\r\n    return state;\r\n  },\r\n  setTimeDirection: (v) => {\r\n    state.timeDirection = v;\r\n    return state;\r\n  },\r\n  setTimeDirectionIncrement: () => state.setTimeDirection(TIMER_INCREMENT),\r\n  setTimeDirectionDecrement: () => state.setTimeDirection(TIMER_DECREMENT),\r\n  isTimerIncrement: () => state.timeDirection === TIMER_INCREMENT,\r\n  isTimerDecrement: () => state.timeDirection === TIMER_DECREMENT,\r\n  setTimerBeep: (v) => {\r\n    state.timerBeep = v;\r\n    return state;\r\n  },\r\n  init: (init = {}) => {\r\n    if (init.env) state.env = init.env;\r\n    if (init.timeDirection) state.timeDirection = init.timeDirection;\r\n    return state;\r\n  },\r\n});\r\n\r\nexport default Config;\r\n","import Config from \"../models/Config\";\r\nimport globalConfig from \"../_config/config\";\r\n\r\nconst config = Config(globalConfig);\r\n\r\nexport { config };\r\n","import devConfig from \"./configs/devConfig.json\";\r\nimport prodConfig from \"./configs/prodConfig.json\";\r\nimport appConfig from \"./configs/appConfig.json\";\r\n\r\nconst envConfig = prodConfig;\r\n\r\nconst globalConfig = {\r\n  env: envConfig.env,\r\n  timeDirection: appConfig.timeDirection,\r\n  timerBeep: appConfig.timerBeep,\r\n};\r\n\r\nexport default globalConfig;\r\n","import { CURR_TRAINING_STEP_SET } from \"../constants\";\r\n\r\nexport const setCurrTrainingStep = (payload) => {\r\n  return { type: CURR_TRAINING_STEP_SET, payload };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Training, { TrainingStep } from \"../../../models/Training\";\r\nimport { modTraining } from \"../../../redux/actions/trainingListAction\";\r\nimport { setCurrTraining } from \"../../../redux/actions/currTrainingAction\";\r\nimport { setCurrTrainingStep } from \"../../../redux/actions/currTrainingStepAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n}));\r\n\r\nconst TrainingStepFormMod = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { dispatch, training, trainingStep, open, handleClose } = props;\r\n\r\n  const validationSchema = yup.object({\r\n    title: yup\r\n      .string(\"Donner un nom a votre entrainement\")\r\n      .min(3, \"Le nom doit faire minimum 3 caracteres\")\r\n      .required(\"Le nom est requis\"),\r\n    duration: yup\r\n      .number(\"Entrer le nombre de secondes\")\r\n      .required(\"requis\")\r\n      .positive(\"superieur ou egal a 0\")\r\n      .integer(\"nombre entier\")\r\n      .default(30),\r\n    reposDuration: yup\r\n      .number(\"Entrer le nombre de secondes\")\r\n      .required(\"requis\")\r\n      .min(0, \"minimum 0\")\r\n      .integer(\"nombre entier\")\r\n      .default(30),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: trainingStep.title ? trainingStep.title : \"\",\r\n      duration: trainingStep.duration / 1000,\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      let nextTrainingStep = TrainingStep(trainingStep);\r\n      nextTrainingStep.setTitle(values.title);\r\n      nextTrainingStep.setDuration(values.duration * 1000);\r\n      dispatch(setCurrTrainingStep(nextTrainingStep));\r\n      let nextTraining = Training(training);\r\n      nextTraining.modItemById(\"items\", nextTrainingStep);\r\n      if (values.reposDuration && values.reposDuration !== \"0\") {\r\n        const nextReposDuration = values.reposDuration * 1000;\r\n        let repos = TrainingStep().setId(nextTraining.items.length);\r\n        repos.setTitle(\"Repos\").setDuration(nextReposDuration).hide();\r\n        nextTraining.addItemAfterAnother(\"items\", repos, nextTrainingStep);\r\n      }\r\n      dispatch(setCurrTraining(nextTraining));\r\n      dispatch(modTraining(nextTraining));\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        fullWidth\r\n      >\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Modifier l'entrainement\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              label=\"Nom de l'entrainement\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={formik.values.title}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.title && Boolean(formik.errors.title)}\r\n              helperText={formik.touched.title && formik.errors.title}\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"duration\"\r\n              name=\"duration\"\r\n              label=\"Duree de l'exercice\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={formik.values.duration}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.duration && Boolean(formik.errors.duration)}\r\n              helperText={formik.touched.duration && formik.errors.duration}\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"reposDuration\"\r\n              name=\"reposDuration\"\r\n              label=\"Ajouter un temps de repos apres l'exercice\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={formik.values.reposDuration}\r\n              onChange={formik.handleChange}\r\n              error={\r\n                formik.touched.reposDuration &&\r\n                Boolean(formik.errors.reposDuration)\r\n              }\r\n              helperText={\r\n                formik.touched.reposDuration && formik.errors.reposDuration\r\n              }\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              //   onClick={handleClose}\r\n              startIcon={<AddIcon />}\r\n              fullWidth\r\n              type=\"submit\"\r\n            >\r\n              Modifier l'entrainement\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MapStateToProps = (state) => ({\r\n  training: state.currTraining,\r\n  trainingStep: state.currTrainingStep,\r\n});\r\n\r\nexport default connect(MapStateToProps)(TrainingStepFormMod);\r\n","import React, { useState } from \"react\";\r\n\r\nconst useShowable = (initialState = false) => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const show = () => setState(true);\r\n  const hide = () => setState(false);\r\n  const toggleVisibility = () => setState(!state);\r\n\r\n  return { visible: state, show, hide, toggleVisibility };\r\n};\r\n\r\nexport default useShowable;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  ListItemSecondaryAction,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport AppBar from \"../../components/AppBar/AppBar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Item from \"./components/Item\";\r\nimport ExerciseForm from \"./components/ExerciseForm\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { modTraining } from \"../../redux/actions/trainingListAction\";\r\nimport Training, { TrainingStep } from \"../../models/Training\";\r\nimport { setCurrTraining } from \"../../redux/actions/currTrainingAction\";\r\nimport { config } from \"../../services/services\";\r\nimport TrainingStepFormMod from \"./components/TrainingStepFormMod\";\r\nimport useShowable from \"../../hooks/useShowable\";\r\nimport { setCurrTrainingStep } from \"../../redux/actions/currTrainingStepAction\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  paper: {\r\n    margin: 10,\r\n  },\r\n  list: {\r\n    justifyContent: \"center\",\r\n    height: window.innerHeight * 0.75,\r\n    \"overflow-y\": \"scroll\",\r\n  },\r\n  iconContainer: {\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  endListButton: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  endListButtonContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    padding: 5,\r\n  },\r\n  trainingButtonContainer: {\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    bottom: 10,\r\n  },\r\n  trainingButton: {\r\n    flex: 1,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  },\r\n}));\r\n\r\nconst TrainingSetupPage = (props) => {\r\n  const { dispatch, training } = props;\r\n  const classes = useStyles();\r\n\r\n  const addForm = useShowable();\r\n  const modForm = useShowable();\r\n\r\n  const onDragEnd = (result) => {\r\n    if (!result.destination) return; // dropped outside the list\r\n    const srcIndex = result.source.index;\r\n    const destIndex = result.destination.index;\r\n    let nextTraining = Training(training);\r\n    nextTraining.reorder(\"items\", srcIndex, destIndex);\r\n    dispatch(setCurrTraining(nextTraining));\r\n    dispatch(modTraining(nextTraining));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar title={training.title} backIcon={true} />\r\n      <Paper variant=\"outlined\" className={classes.paper}>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <Droppable droppableId={\"training\"}>\r\n            {(provided, snapshot) => (\r\n              <List\r\n                className={classes.list}\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                {training.items.map((item, i) => {\r\n                  const rehydrated = TrainingStep(item);\r\n                  const id = \"id\" + item.id;\r\n                  return (\r\n                    <Draggable key={id} draggableId={id} index={i}>\r\n                      {(provided, snapshot) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          style={provided.draggableProps.style}\r\n                        >\r\n                          <Item\r\n                            key={i}\r\n                            title={rehydrated.title}\r\n                            time={rehydrated.duration}\r\n                            onPress={() => {\r\n                              dispatch(setCurrTrainingStep(rehydrated));\r\n                              modForm.show();\r\n                            }}\r\n                            onDelete={() => {\r\n                              let nextTraining = Training(training);\r\n                              nextTraining.delItemByIndex(\"items\", i);\r\n                              dispatch(setCurrTraining(nextTraining));\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n              </List>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n        <div className={classes.endListButtonContainer}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={addForm.show}\r\n            startIcon={<AddIcon />}\r\n            className={classes.endListButton}\r\n          >\r\n            Ajouter\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n      <div className={classes.trainingButtonContainer}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          href={config.isProdEnv() ? \"#/training-run\" : \"/training-run\"}\r\n          className={classes.trainingButton}\r\n          disabled={training.items.length === 0}\r\n        >\r\n          Entrainement\r\n        </Button>\r\n      </div>\r\n      {addForm.visible && (\r\n        <ExerciseForm open={addForm.visible} handleClose={addForm.hide} />\r\n      )}\r\n      {modForm.visible && (\r\n        <TrainingStepFormMod\r\n          open={modForm.visible}\r\n          handleClose={modForm.hide}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MapStateToProps = (state) => ({\r\n  training: Training(state.currTraining),\r\n});\r\n\r\nexport default connect(MapStateToProps)(TrainingSetupPage);\r\n","import { canHandleInit, canHandleTimer } from \"./handlers/handlers\";\r\n\r\nconst Timer = (lastState) => {\r\n  let state = {};\r\n\r\n  const behavior = (state) => ({\r\n    ...canHandleInit(state),\r\n    ...canHandleTimer(state),\r\n  });\r\n  Object.assign(state, behavior(state));\r\n  if (lastState) state.fromLastState(lastState);\r\n  return state;\r\n};\r\n\r\nexport default Timer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Timer from \"../models/Timer\";\r\n\r\nconst useTimer = () => {\r\n  const [state, setState] = useState(Timer().initTimer());\r\n\r\n  const play = () => setState({ ...Timer(state).play() });\r\n  const replay = () => setState({ ...Timer(state).replay() });\r\n  const pause = () => setState({ ...Timer(state).pause() });\r\n  const stop = () => setState({ ...Timer(state).stop() });\r\n  const increment = () => setState({ ...Timer(state).increment() });\r\n  const setTime = (v) => setState({ ...Timer(state).setTime(v) });\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      if (state && state.isRunning) increment();\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [state]);\r\n\r\n  return {\r\n    timer: state,\r\n    play,\r\n    replay,\r\n    pause,\r\n    stop,\r\n    setTime,\r\n  };\r\n};\r\n\r\nexport default useTimer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Training, { TrainingStep } from \"../../../models/Training\";\r\nimport { addTraining } from \"../../../redux/actions/trainingListAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n}));\r\n\r\nconst TrainingFormAdd = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { dispatch, open, handleClose } = props;\r\n\r\n  const validationSchema = yup.object({\r\n    title: yup\r\n      .string(\"Donner un nom a votre entrainement\")\r\n      .min(3, \"Le nom doit faire minimum 3 caracteres\")\r\n      .required(\"Le nom est requis\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: { title: \"\" },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      let nextTraining = Training();\r\n      nextTraining.setId().setTitle(values.title).setCollection(\"items\", []);\r\n      dispatch(addTraining(nextTraining));\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        fullWidth\r\n      >\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <DialogTitle id=\"form-dialog-title\">Nouvel entrainement</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              label=\"Nom de l'entrainement\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={formik.values.title}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.title && Boolean(formik.errors.title)}\r\n              helperText={formik.touched.title && formik.errors.title}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              //   onClick={handleClose}\r\n              startIcon={<AddIcon />}\r\n              fullWidth\r\n              type=\"submit\"\r\n            >\r\n              Ajouter le nouvel entrainement\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MapStateToProps = (state) => ({});\r\n\r\nexport default connect(MapStateToProps)(TrainingFormAdd);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Training, { TrainingStep } from \"../../../models/Training\";\r\nimport {\r\n  addTraining,\r\n  modTraining,\r\n} from \"../../../redux/actions/trainingListAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n}));\r\n\r\nconst TrainingFormMod = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { dispatch, training, open, handleClose } = props;\r\n\r\n  const validationSchema = yup.object({\r\n    title: yup\r\n      .string(\"Donner un nom a votre entrainement\")\r\n      .min(3, \"Le nom doit faire minimum 3 caracteres\")\r\n      .required(\"Le nom est requis\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: { title: training.title ? training.title : \"\" },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      let nextTraining = Training(training);\r\n      nextTraining.setTitle(values.title);\r\n      dispatch(modTraining(nextTraining));\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        fullWidth\r\n      >\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Modifier l'entrainement\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              label=\"Nom de l'entrainement\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={formik.values.title}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.title && Boolean(formik.errors.title)}\r\n              helperText={formik.touched.title && formik.errors.title}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              //   onClick={handleClose}\r\n              startIcon={<AddIcon />}\r\n              fullWidth\r\n              type=\"submit\"\r\n            >\r\n              Modifier l'entrainement\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MapStateToProps = (state) => ({\r\n  training: state.currTraining,\r\n});\r\n\r\nexport default connect(MapStateToProps)(TrainingFormMod);\r\n","import React, { Dimensions, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  ListItemSecondaryAction,\r\n  Paper,\r\n  CircularProgress,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport AppBar from \"../../components/AppBar/AppBar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport Training, { TrainingList } from \"../../models/Training\";\r\nimport { config } from \"../../services/services\";\r\nimport {\r\n  delTraining,\r\n  modTraining,\r\n  setTrainingList,\r\n} from \"../../redux/actions/trainingListAction\";\r\nimport { setCurrTraining } from \"../../redux/actions/currTrainingAction\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChevronRight } from \"@material-ui/icons\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport TrainingFormAdd from \"./components/TrainingFormAdd\";\r\nimport useShowable from \"../../hooks/useShowable\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport TrainingFormMod from \"./components/TrainingFormMod\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  paper: {\r\n    margin: 10,\r\n  },\r\n  list: {\r\n    justifyContent: \"center\",\r\n  },\r\n  endListButton: {},\r\n  endListButtonContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    padding: 5,\r\n  },\r\n}));\r\n\r\nconst TrainingListPage = (props) => {\r\n  const classes = useStyles();\r\n  const { trainingList, dispatch, currTraining } = props;\r\n  const addForm = useShowable();\r\n  const modForm = useShowable();\r\n  const history = useHistory();\r\n\r\n  //   useEffect(() => {\r\n  //     dispatch(setTrainingList([currTraining]));\r\n  //     //   dispatch(modTraining(currTraining));\r\n  //     return () => {};\r\n  //   }, []);\r\n\r\n  const onDragEnd = (result) => {\r\n    if (!result.destination) return; // dropped outside the list\r\n    const srcIndex = result.source.index;\r\n    const destIndex = result.destination.index;\r\n    let nextTrainingList = TrainingList(trainingList);\r\n    nextTrainingList.reorder(\"list\", srcIndex, destIndex);\r\n    dispatch(setTrainingList(nextTrainingList.list));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar title=\"Training\" />\r\n      <Paper variant=\"outlined\" className={classes.paper}>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <Droppable droppableId={\"trainingList\"}>\r\n            {(provided, snapshot) => (\r\n              <List\r\n                className={classes.list}\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                {trainingList.list.map((item, i) => {\r\n                  let rehydrated = Training(item);\r\n                  const navigateToTraining = () => {\r\n                    dispatch(setCurrTraining(rehydrated));\r\n                    history.push(\"/training\");\r\n                  };\r\n                  const editTraining = () => {\r\n                    dispatch(setCurrTraining(rehydrated));\r\n                    modForm.show();\r\n                  };\r\n                  const onDelete = () => {\r\n                    dispatch(delTraining(rehydrated));\r\n                  };\r\n                  return (\r\n                    <Draggable key={item.id} draggableId={item.id} index={i}>\r\n                      {(provided, snapshot) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          style={provided.draggableProps.style}\r\n                        >\r\n                          <ListItem button onClick={navigateToTraining} key={i}>\r\n                            <ListItemText primary={item.title} />\r\n                            <ListItemSecondaryAction>\r\n                              <IconButton\r\n                                edge=\"end\"\r\n                                aria-label=\"comments\"\r\n                                onClick={onDelete}\r\n                              >\r\n                                <DeleteIcon />\r\n                              </IconButton>\r\n                              <IconButton\r\n                                edge=\"end\"\r\n                                aria-label=\"comments\"\r\n                                onClick={editTraining}\r\n                              >\r\n                                <EditIcon />\r\n                              </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                          </ListItem>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n              </List>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n        <div className={classes.endListButtonContainer}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={addForm.show}\r\n            startIcon={<AddIcon />}\r\n            className={classes.endListButton}\r\n          >\r\n            Ajouter\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n      {addForm.visible && (\r\n        <TrainingFormAdd open={addForm.visible} handleClose={addForm.hide} />\r\n      )}\r\n      {modForm.visible && (\r\n        <TrainingFormMod open={modForm.visible} handleClose={modForm.hide} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MapStateToProps = (state) => ({\r\n  trainingList: TrainingList(state.trainingList),\r\n  currTraining: Training(state.currTraining),\r\n});\r\n\r\nexport default connect(MapStateToProps)(TrainingListPage);\r\n","import React from \"react\";\r\nimport { BrowserRouter, HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport TrainingPage from \"../screens/TrainingPage/TrainingPage\";\r\nimport TrainingRunPage from \"../screens/TrainingRunPage/TrainingRunPage\";\r\nimport TrainingListPage from \"../screens/TrainingListPage/TrainingListPage\";\r\nimport { config } from \"../services/services\";\r\n\r\nexport default function AppNavigation() {\r\n  const Router = config.isProdEnv() ? HashRouter : BrowserRouter;\r\n  const basename = config.isProdEnv() ? \"/tabata/\" : \"/\";\r\n\r\n  return (\r\n    <Router basename={basename}>\r\n      {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <TrainingListPage />\r\n        </Route>\r\n        <Route path=\"/training\">\r\n          <TrainingPage />\r\n        </Route>\r\n        <Route path=\"/training-run\">\r\n          <TrainingRunPage />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","import Training from \"../../models/Training\";\r\nimport { CURR_TRAINING_SET } from \"../constants\";\r\n\r\nconst initialState = () => {\r\n  return Training().setId(\"default\").setCollection(\"items\", []);\r\n};\r\n\r\nconst currTrainingReducer = (state = initialState(), action) => {\r\n  switch (action.type) {\r\n    case CURR_TRAINING_SET: {\r\n      const nextState = { ...action.payload };\r\n      return nextState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { currTrainingReducer };\r\n","import Training, { TrainingStep } from \"../../models/Training\";\r\nimport { CURR_TRAINING_STEP_SET } from \"../constants\";\r\n\r\nconst initialState = () => {\r\n  return TrainingStep().setId().setTitle(\"Bidibou <3\").setDuration(30);\r\n};\r\n\r\nconst currTrainingStepReducer = (state = initialState(), action) => {\r\n  switch (action.type) {\r\n    case CURR_TRAINING_STEP_SET: {\r\n      const nextState = { ...action.payload };\r\n      return nextState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { currTrainingStepReducer };\r\n","import Training, { TrainingList } from \"../../models/Training\";\r\nimport {\r\n  TRAINING_LIST_SET,\r\n  TRAINING_ADD,\r\n  TRAINING_MOD,\r\n  TRAINING_DEL,\r\n  TRAINING_MOVE,\r\n} from \"../constants\";\r\n\r\nconst initialState = () => TrainingList({ list: [] }).setId();\r\n\r\nconst trainingListReducer = (state = initialState(), action) => {\r\n  switch (action.type) {\r\n    case TRAINING_LIST_SET: {\r\n      const nextState = { ...state, list: [...action.payload] };\r\n      return nextState;\r\n    }\r\n    case TRAINING_ADD: {\r\n      const nextList = [...state.list, action.payload];\r\n      const nextState = { ...state, list: nextList };\r\n      return nextState;\r\n    }\r\n    case TRAINING_MOD: {\r\n      const nextTraining = { ...action.payload };\r\n      const nextList = state.list.map((i) => {\r\n        const inner = Training(i);\r\n        return inner.getId() === nextTraining.getId() ? nextTraining : inner;\r\n      });\r\n      const nextState = { ...state, list: nextList };\r\n      return nextState;\r\n    }\r\n    case TRAINING_DEL: {\r\n      const nextTraining = { ...action.payload };\r\n      const nextList = state.list.filter((i) => {\r\n        const inner = Training(i);\r\n        return inner.getId() !== nextTraining.getId();\r\n      });\r\n      const nextState = { ...state, list: nextList };\r\n      return nextState;\r\n    }\r\n    case TRAINING_MOVE: {\r\n      const { indexA, indexB } = action.payload;\r\n\r\n      let nextList = [...state.list];\r\n      const tmp = nextList[indexA];\r\n      nextList[indexA] = nextList[indexB];\r\n      nextList[indexB] = tmp;\r\n      const nextState = { ...state, list: nextList };\r\n      return nextState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { trainingListReducer };\r\n","import { createStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport { currTrainingReducer } from \"./reducers/currTrainingReducer\";\r\nimport { currTrainingStepReducer } from \"./reducers/currTrainingStepReducer\";\r\nimport { trainingListReducer } from \"./reducers/trainingListReducer\";\r\n\r\nconst rootReducers = combineReducers({\r\n  trainingList: trainingListReducer,\r\n  currTraining: currTrainingReducer,\r\n  currTrainingStep: currTrainingStepReducer,\r\n});\r\n\r\n// convert object to string and store in localStorage\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serialisedState = JSON.stringify(state);\r\n    localStorage.setItem(\"persistantState\", serialisedState);\r\n  } catch (e) {\r\n    console.warn(e);\r\n  }\r\n}\r\n\r\n// load string from localStarage and convert into an Object\r\n// invalid output must be undefined\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serialisedState = localStorage.getItem(\"persistantState\");\r\n    if (serialisedState === null) return undefined;\r\n    return JSON.parse(serialisedState);\r\n  } catch (e) {\r\n    console.warn(e);\r\n    return undefined;\r\n  }\r\n}\r\n\r\n// create our store from our rootReducers and use loadFromLocalStorage\r\n// to overwrite any values that we already have saved\r\nconst store = createStore(rootReducers, loadFromLocalStorage());\r\n\r\n// listen for store changes and use saveToLocalStorage to\r\n// save them to localStorage\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\nexport { store };\r\n","import React from \"react\";\nimport AppNavigation from \"../navigation/AppNavigation\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"../redux/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div id=\"app\">\n        <AppNavigation />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  //   <React.StrictMode>\n  <App />,\n  //   </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}